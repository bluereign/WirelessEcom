<cfcomponent output="false" extends="BaseHandler">		<!--- Use CFProperty to declare beans for injection.  By default, they will be placed in the variables scope --->	<cfproperty name="AssetPaths" inject="id:AssetPaths" scope="variables" />	<cfproperty name="DynamicViewRenderer" inject="id:DynamicViewRenderer" scope="variables" />	<!------------------------- Framework interception points ----------------------------->			<cffunction name="preHandler" access="public" returntype="void" output="false">		<cfargument name="event" required="true" type="coldbox.system.web.context.RequestContext" />		<cfargument name="action" required="true" type="string" />		<cfargument name="eventArguments" required="true" type="struct" />					<cfscript>			super.preHandler(argumentCollection=arguments);			event.setLayout('main');						event.setValue("assetPaths", assetPaths, true); //set to prc scope		</cfscript>			</cffunction><!------------------------------- Explicit actions --------------------------------->		<!--- Default Action --->	<cffunction name="index" returntype="void" output="false" hint="Sample Event">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfset event.setView(url='/index.cfm/')>	</cffunction>		<cffunction name="SamsungGalaxyS5" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			event.paramValue('Email', '');			event.paramValue('CampaignId', '');						prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.SamsungGalaxyS5";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="SamsungGalaxyS6" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			event.paramValue('Email', '');			event.paramValue('CampaignId', '');						prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.SamsungGalaxyS6";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="SamsungGalaxyS6LP" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			event.paramValue('Email', '');			event.paramValue('CampaignId', '');						prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.SamsungGalaxyS6LP";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="VerizonEdge" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.VerizonEdge";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="HTCOneM8" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.HTCOneM8";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="ATTNext" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.ATTNext";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="LGG3" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.LGG3";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="FisherHouseFoundation" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.FisherHouseFoundation";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="SamsungGalaxyS6Plus" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			event.paramValue('Email', '');			event.paramValue('CampaignId', '');						prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.SamsungGalaxyS6Plus";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="SamsungGalaxyNote5" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			event.paramValue('Email', '');			event.paramValue('CampaignId', '');						prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.SamsungGalaxyNote5";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction>	<cffunction name="iPhone" returntype="void" output="false">		<cfargument name="event">		<cfargument name="rc">		<cfargument name="prc">				<cfscript>			event.paramValue('Email', '');			event.paramValue('CampaignId', '');						prc.DynamicViewRenderer = variables.DynamicViewRenderer;			prc.contentEvent = "content.iPhone";			event.setView('content/dynamicRenderer');		</cfscript>	</cffunction><!------------------------------------------- PRIVATE EVENTS ------------------------------------------><!------------------------------------------- CUSTOM EVENTS ------------------------------------------>    <cffunction name="onMissingAction" hint="I am fired when an action is called on me that doesn't exist" returntype="void" output="no" access="public">	    <cfargument name="Event" hint="The event object" required="yes" type="coldbox.system.web.context.RequestContext" />	    <cfargument name="missingAction" hint="The name of the requested action" required="true" type="string" />	    <cfscript>		    var theRealAction = replace(missingAction, "-", "", "all");		    if ( structKeyExists(this, theRealAction) ) {		    	runEvent( event.getCurrentHandler() & "." & theRealAction );		    } else {		    	runEvent( replace(getSetting("onInvalidEvent"), "/", ".", "all") );		    }	    </cfscript>    </cffunction></cfcomponent>
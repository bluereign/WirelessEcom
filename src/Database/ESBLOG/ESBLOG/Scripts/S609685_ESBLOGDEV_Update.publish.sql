/*
Deployment script for S609685_ESBLOGDEV

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "S609685_ESBLOGDEV"
:setvar DefaultFilePrefix "S609685_ESBLOGDEV"
:setvar DefaultDataPath "K:\MSSQL10_50.I7\MSSQL\DATA\"
:setvar DefaultLogPath "K:\MSSQL10_50.I7\MSSQL\DATA\"
:setvar ESBLOG "ESBLOG"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[UserAuth]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserAuth] (
    [Id]            INT            IDENTITY (1, 1) NOT NULL,
    [UserName]      VARCHAR (8000) NULL,
    [Email]         VARCHAR (8000) NULL,
    [PrimaryEmail]  VARCHAR (8000) NULL,
    [FirstName]     VARCHAR (8000) NULL,
    [LastName]      VARCHAR (8000) NULL,
    [DisplayName]   VARCHAR (8000) NULL,
    [BirthDate]     DATETIME       NULL,
    [BirthDateRaw]  VARCHAR (8000) NULL,
    [Country]       VARCHAR (8000) NULL,
    [Culture]       VARCHAR (8000) NULL,
    [FullName]      VARCHAR (8000) NULL,
    [Gender]        VARCHAR (8000) NULL,
    [Language]      VARCHAR (8000) NULL,
    [MailAddress]   VARCHAR (8000) NULL,
    [Nickname]      VARCHAR (8000) NULL,
    [PostalCode]    VARCHAR (8000) NULL,
    [TimeZone]      VARCHAR (8000) NULL,
    [Salt]          VARCHAR (8000) NULL,
    [PasswordHash]  VARCHAR (8000) NULL,
    [DigestHA1Hash] VARCHAR (8000) NULL,
    [Roles]         VARCHAR (8000) NULL,
    [Permissions]   VARCHAR (8000) NULL,
    [CreatedDate]   DATETIME       NOT NULL,
    [ModifiedDate]  DATETIME       NOT NULL,
    [RefId]         INT            NULL,
    [RefIdStr]      VARCHAR (8000) NULL,
    [Meta]          VARCHAR (8000) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserAuth])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserAuth] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserAuth] ([Id], [UserName], [Email], [PrimaryEmail], [FirstName], [LastName], [DisplayName], [Salt], [PasswordHash], [DigestHA1Hash], [Roles], [Permissions], [CreatedDate], [ModifiedDate], [Meta])
        SELECT   [Id],
                 [UserName],
                 [Email],
                 [PrimaryEmail],
                 [FirstName],
                 [LastName],
                 [DisplayName],
                 [Salt],
                 [PasswordHash],
                 [DigestHA1Hash],
                 [Roles],
                 [Permissions],
                 [CreatedDate],
                 [ModifiedDate],
                 [Meta]
        FROM     [dbo].[UserAuth]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserAuth] OFF;
    END

DROP TABLE [dbo].[UserAuth];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserAuth]', N'UserAuth';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[UserOAuthProvider]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserOAuthProvider] (
    [Id]                 INT            IDENTITY (1, 1) NOT NULL,
    [UserAuthId]         INT            NOT NULL,
    [Provider]           VARCHAR (8000) NULL,
    [UserId]             VARCHAR (8000) NULL,
    [UserName]           VARCHAR (8000) NULL,
    [FullName]           VARCHAR (8000) NULL,
    [DisplayName]        VARCHAR (8000) NULL,
    [FirstName]          VARCHAR (8000) NULL,
    [LastName]           VARCHAR (8000) NULL,
    [Email]              VARCHAR (8000) NULL,
    [BirthDate]          DATETIME       NULL,
    [BirthDateRaw]       VARCHAR (8000) NULL,
    [Country]            VARCHAR (8000) NULL,
    [Culture]            VARCHAR (8000) NULL,
    [Gender]             VARCHAR (8000) NULL,
    [Language]           VARCHAR (8000) NULL,
    [MailAddress]        VARCHAR (8000) NULL,
    [Nickname]           VARCHAR (8000) NULL,
    [PostalCode]         VARCHAR (8000) NULL,
    [TimeZone]           VARCHAR (8000) NULL,
    [RefreshToken]       VARCHAR (8000) NULL,
    [RefreshTokenExpiry] DATETIME       NULL,
    [RequestToken]       VARCHAR (8000) NULL,
    [RequestTokenSecret] VARCHAR (8000) NULL,
    [Items]              VARCHAR (8000) NULL,
    [AccessToken]        VARCHAR (8000) NULL,
    [AccessTokenSecret]  VARCHAR (8000) NULL,
    [CreatedDate]        DATETIME       NOT NULL,
    [ModifiedDate]       DATETIME       NOT NULL,
    [RefId]              INT            NULL,
    [RefIdStr]           VARCHAR (8000) NULL,
    [Meta]               VARCHAR (8000) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserOAuthProvider])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserOAuthProvider] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserOAuthProvider] ([Id], [UserAuthId], [Provider], [UserId], [UserName], [DisplayName], [FirstName], [LastName], [Email], [RequestToken], [RequestTokenSecret], [Items], [AccessToken], [AccessTokenSecret], [CreatedDate], [ModifiedDate])
        SELECT   [Id],
                 [UserAuthId],
                 [Provider],
                 [UserId],
                 [UserName],
                 [DisplayName],
                 [FirstName],
                 [LastName],
                 [Email],
                 [RequestToken],
                 [RequestTokenSecret],
                 [Items],
                 [AccessToken],
                 [AccessTokenSecret],
                 [CreatedDate],
                 [ModifiedDate]
        FROM     [dbo].[UserOAuthProvider]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserOAuthProvider] OFF;
    END

DROP TABLE [dbo].[UserOAuthProvider];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserOAuthProvider]', N'UserOAuthProvider';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd8631ea7-e388-4ae1-a2f9-5742079a06db')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d8631ea7-e388-4ae1-a2f9-5742079a06db')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cf0dd809-b30b-4e90-8c89-943dc346acc9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cf0dd809-b30b-4e90-8c89-943dc346acc9')

GO

GO
PRINT N'Update complete.';


GO

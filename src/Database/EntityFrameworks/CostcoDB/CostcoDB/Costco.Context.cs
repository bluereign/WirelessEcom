//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CostcoDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Core.Objects.DataClasses;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    
    public partial class CostcoEntities : DbContext
    {
        public CostcoEntities()
            : base("name=CostcoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Functionality> Functionalities { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<RoleFunctionality> RoleFunctionalities { get; set; }
        public DbSet<RoleMenu> RoleMenus { get; set; }
        public DbSet<UserRole> UserRoles { get; set; }
        public DbSet<ActionCapture> ActionCaptures { get; set; }
        public DbSet<Action> Actions { get; set; }
        public DbSet<callNote> callNotes { get; set; }
        public DbSet<callNoteSubject> callNoteSubjects { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<OrderNote> OrderNotes { get; set; }
        public DbSet<OrderNoteSubject> OrderNoteSubjects { get; set; }
        public DbSet<WACalendar> WACalendars { get; set; }
        public DbSet<CartType> CartTypes { get; set; }
        public DbSet<Recommendation> Recommendations { get; set; }
        public DbSet<Accessory> Accessories { get; set; }
        public DbSet<Bundle> Bundles { get; set; }
        public DbSet<Company> Companies { get; set; }
        public DbSet<Coupon> Coupons { get; set; }
        public DbSet<Device> Devices { get; set; }
        public DbSet<DeviceService> DeviceServices { get; set; }
        public DbSet<DeviceServiceMasterGroupOptional> DeviceServiceMasterGroupOptionals { get; set; }
        public DbSet<FilterGroup> FilterGroups { get; set; }
        public DbSet<FilterOption> FilterOptions { get; set; }
        public DbSet<GersItm> GersItms { get; set; }
        public DbSet<GersPriceGroup> GersPriceGroups { get; set; }
        public DbSet<GersStock> GersStocks { get; set; }
        public DbSet<Image> Images { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductTag> ProductTags { get; set; }
        public DbSet<ProductType> ProductTypes { get; set; }
        public DbSet<PromotionCode> PromotionCodes { get; set; }
        public DbSet<PromotionProduct> PromotionProducts { get; set; }
        public DbSet<Property> Properties { get; set; }
        public DbSet<PropertyMaster> PropertyMasters { get; set; }
        public DbSet<PropertyMasterAlia> PropertyMasterAlias { get; set; }
        public DbSet<PropertyMasterGroup> PropertyMasterGroups { get; set; }
        public DbSet<RateplanDevice> RateplanDevices { get; set; }
        public DbSet<RateplanException> RateplanExceptions { get; set; }
        public DbSet<RateplanMarket> RateplanMarkets { get; set; }
        public DbSet<RateplanService> RateplanServices { get; set; }
        public DbSet<ServiceDataFeature> ServiceDataFeatures { get; set; }
        public DbSet<ServiceExclusion> ServiceExclusions { get; set; }
        public DbSet<ServiceMaster> ServiceMasters { get; set; }
        public DbSet<ServiceMasterGroup> ServiceMasterGroups { get; set; }
        public DbSet<SessionStockReservation> SessionStockReservations { get; set; }
        public DbSet<warranty> warranties { get; set; }
        public DbSet<ZipCodeMarket> ZipCodeMarkets { get; set; }
        public DbSet<CarrierImage> CarrierImages { get; set; }
        public DbSet<Carrier> Carriers { get; set; }
        public DbSet<Category1> Categories1 { get; set; }
        public DbSet<Content> Contents { get; set; }
        public DbSet<Datum> Data { get; set; }
        public DbSet<DataGroup> DataGroups { get; set; }
        public DbSet<Environment> Environments { get; set; }
        public DbSet<Image1> Images1 { get; set; }
        public DbSet<Location> Locations { get; set; }
        public DbSet<Rebate> Rebates { get; set; }
        public DbSet<RebateSKU> RebateSKUs { get; set; }
        public DbSet<Release> Releases { get; set; }
        public DbSet<ReleaseTemplateCarrier> ReleaseTemplateCarriers { get; set; }
        public DbSet<ReleaseTemplate> ReleaseTemplates { get; set; }
        public DbSet<SiteGroup> SiteGroups { get; set; }
        public DbSet<Site> Sites { get; set; }
        public DbSet<SiteTemplate> SiteTemplates { get; set; }
        public DbSet<Tag> Tags { get; set; }
        public DbSet<TemplateReleaseContent> TemplateReleaseContents { get; set; }
        public DbSet<Template> Templates { get; set; }
        public DbSet<Type> Types { get; set; }
        public DbSet<Multimedia> Multimedias { get; set; }
        public DbSet<Video> Videos { get; set; }
        public DbSet<AdminComponent> AdminComponents { get; set; }
        public DbSet<AdminMenu> AdminMenus { get; set; }
        public DbSet<Coupon1> Coupon1 { get; set; }
        public DbSet<DashboardData> DashboardDatas { get; set; }
        public DbSet<dtproperty> dtproperties { get; set; }
        public DbSet<PromotionCodes1> PromotionCodes1 { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<Activity> Activities { get; set; }
        public DbSet<Cart> Carts { get; set; }
        public DbSet<CatalogAudit> CatalogAudits { get; set; }
        public DbSet<CommandLog> CommandLogs { get; set; }
        public DbSet<CostcoAnalytic> CostcoAnalytics { get; set; }
        public DbSet<DashboardData1> DashboardData1 { get; set; }
        public DbSet<InvalidCart> InvalidCarts { get; set; }
        public DbSet<InvalidCartType> InvalidCartTypes { get; set; }
        public DbSet<order> orders { get; set; }
        public DbSet<Payment> Payments { get; set; }
        public DbSet<UpgradeEligibility> UpgradeEligibilities { get; set; }
        public DbSet<EmailTemplate> EmailTemplates { get; set; }
        public DbSet<OrderQueue> OrderQueues { get; set; }
        public DbSet<OrderQueue_History> OrderQueue_History { get; set; }
        public DbSet<Applied> Applieds { get; set; }
        public DbSet<Category11> Category1 { get; set; }
        public DbSet<Condition> Conditions { get; set; }
        public DbSet<DiscountType> DiscountTypes { get; set; }
        public DbSet<Operator> Operators { get; set; }
        public DbSet<RemainingQuantity> RemainingQuantities { get; set; }
        public DbSet<ReleaseTask> ReleaseTasks { get; set; }
        public DbSet<ReleaseUser> ReleaseUsers { get; set; }
        public DbSet<Activity1> Activity1 { get; set; }
        public DbSet<Address> Addresses { get; set; }
        public DbSet<LineService> LineServices { get; set; }
        public DbSet<Order1> Orders1 { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<OrderToRebate> OrderToRebates { get; set; }
        public DbSet<Payment1> Payment1 { get; set; }
        public DbSet<PaymentMethod> PaymentMethods { get; set; }
        public DbSet<Shipment> Shipments { get; set; }
        public DbSet<ShipMethod> ShipMethods { get; set; }
        public DbSet<ShipMethodPromo> ShipMethodPromos { get; set; }
        public DbSet<WirelessAccount> WirelessAccounts { get; set; }
        public DbSet<WirelessAccount_Secure> WirelessAccount_Secure { get; set; }
        public DbSet<WirelessLine> WirelessLines { get; set; }
        public DbSet<CarrierInterfaceLog> CarrierInterfaceLogs { get; set; }
        public DbSet<CheckoutSessionState> CheckoutSessionStates { get; set; }
        public DbSet<CustomerLookUpPlan> CustomerLookUpPlans { get; set; }
        public DbSet<CustomerLookUpService> CustomerLookUpServices { get; set; }
        public DbSet<IncomingGersPrice> IncomingGersPrices { get; set; }
        public DbSet<IncomingGersPriceGroup> IncomingGersPriceGroups { get; set; }
        public DbSet<IncomingGersStock> IncomingGersStocks { get; set; }
        public DbSet<PaymentGatewayListener> PaymentGatewayListeners { get; set; }
        public DbSet<PaymentGatewayType> PaymentGatewayTypes { get; set; }
        public DbSet<SecurityQuestion> SecurityQuestions { get; set; }
        public DbSet<VerizonCreditCheckKeyInfo> VerizonCreditCheckKeyInfoes { get; set; }
        public DbSet<HolidayCalendar> HolidayCalendars { get; set; }
        public DbSet<MilitaryBase> MilitaryBases { get; set; }
        public DbSet<MilitaryBranch> MilitaryBranches { get; set; }
        public DbSet<ZoneCodes980> ZoneCodes980 { get; set; }
        public DbSet<AccessoryForDevice> AccessoryForDevices { get; set; }
        public DbSet<CommissionSKU> CommissionSKUs { get; set; }
        public DbSet<DeviceFreeAccessory> DeviceFreeAccessories { get; set; }
        public DbSet<GersPrice> GersPrices { get; set; }
        public DbSet<Market> Markets { get; set; }
        public DbSet<ProductGuid> ProductGuids { get; set; }
        public DbSet<Rateplan> Rateplans { get; set; }
        public DbSet<Rebate1> Rebates1 { get; set; }
        public DbSet<RebateToFilter> RebateToFilters { get; set; }
        public DbSet<RebateToProduct> RebateToProducts { get; set; }
        public DbSet<Service> Services { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<Device1> Device1 { get; set; }
        public DbSet<OldProdToNewProd> OldProdToNewProds { get; set; }
        public DbSet<Rateplan_InsertProcess> Rateplan_InsertProcess { get; set; }
        public DbSet<Service1> Service1 { get; set; }
        public DbSet<Session> Sessions { get; set; }
        public DbSet<State> States { get; set; }
        public DbSet<UserPromotion> UserPromotions { get; set; }
        public DbSet<ReservedStock> ReservedStocks { get; set; }
        public DbSet<InventoryCap> InventoryCaps { get; set; }
        public DbSet<Release1> Releases1 { get; set; }
        public DbSet<ReleaseInstance> ReleaseInstances { get; set; }
        public DbSet<ReleaseState> ReleaseStates { get; set; }
        public DbSet<CatalogLoad> CatalogLoads { get; set; }
        public DbSet<EmailTemplate1> EmailTemplates1 { get; set; }
        public DbSet<PaymentGatewayLog> PaymentGatewayLogs { get; set; }
        public DbSet<WeblinkAdditionalCommissionSku> WeblinkAdditionalCommissionSkus { get; set; }
        public DbSet<ServiceType> ServiceTypes { get; set; }
        public DbSet<TransitTime> TransitTimes { get; set; }
        public DbSet<BannedUser> BannedUsers { get; set; }
        public DbSet<dn_Accessories> dn_Accessories { get; set; }
        public DbSet<dn_Phones> dn_Phones { get; set; }
        public DbSet<dn_Phones_all> dn_Phones_all { get; set; }
        public DbSet<dn_Plans> dn_Plans { get; set; }
        public DbSet<dn_PrePaids> dn_PrePaids { get; set; }
        public DbSet<Inventory> Inventories { get; set; }
        public DbSet<vProductRebate> vProductRebates { get; set; }
        public DbSet<vProductRebateTotal> vProductRebateTotals { get; set; }
        public DbSet<vRateplanDeviceService> vRateplanDeviceServices { get; set; }
        public DbSet<vRateplanDeviceServiceATT> vRateplanDeviceServiceATTs { get; set; }
        public DbSet<vRateplanDeviceServiceSPT> vRateplanDeviceServiceSPTs { get; set; }
        public DbSet<vRateplanDeviceServiceTMO> vRateplanDeviceServiceTMOes { get; set; }
        public DbSet<vRateplanDeviceServiceVZW> vRateplanDeviceServiceVZWs { get; set; }
        public DbSet<vw_MercentProductFeed> vw_MercentProductFeed { get; set; }
        public DbSet<GetReleaseContent_ByTemplate> GetReleaseContent_ByTemplate { get; set; }
        public DbSet<GetReleaseDetail> GetReleaseDetails { get; set; }
        public DbSet<test> tests { get; set; }
        public DbSet<Sales_View> Sales_View { get; set; }
        public DbSet<SalesAccessory_View> SalesAccessory_View { get; set; }
        public DbSet<vGetAllProduct> vGetAllProducts { get; set; }
        public DbSet<catalogload_device> catalogload_device { get; set; }
        public DbSet<catalogload_devicerateplan> catalogload_devicerateplan { get; set; }
        public DbSet<catalogload_deviceservice> catalogload_deviceservice { get; set; }
        public DbSet<catalogload_products> catalogload_products { get; set; }
        public DbSet<catalogload_property> catalogload_property { get; set; }
        public DbSet<catalogload_rateplan> catalogload_rateplan { get; set; }
        public DbSet<catalogload_rateplanservice> catalogload_rateplanservice { get; set; }
        public DbSet<catalogload_service> catalogload_service { get; set; }
        public DbSet<dn_AllPlans> dn_AllPlans { get; set; }
        public DbSet<vw_GetUncommittedTax> vw_GetUncommittedTax { get; set; }
        public DbSet<CustomerServiceActivation> CustomerServiceActivations { get; set; }
        public DbSet<HandsetPriceHistory> HandsetPriceHistories { get; set; }
        public DbSet<OrderDetailDump> OrderDetailDumps { get; set; }
        public DbSet<OrderDump> OrderDumps { get; set; }
        public DbSet<OrderStatus1> OrderStatus1 { get; set; }
        public DbSet<ActivationsWaiting> ActivationsWaitings { get; set; }
        public DbSet<CapturesWaiting> CapturesWaitings { get; set; }
        public DbSet<CurrentInventory> CurrentInventories { get; set; }
        public DbSet<vMissingKit> vMissingKits { get; set; }
        public DbSet<vPaymentDiff> vPaymentDiffs { get; set; }
        public DbSet<vUPSKeyedImport> vUPSKeyedImports { get; set; }
        public DbSet<Get_CATS_OrderDetails> Get_CATS_OrderDetails { get; set; }
        public DbSet<WeblinkAddCommissionSkuUnion> WeblinkAddCommissionSkuUnions { get; set; }
        public DbSet<AddFile> AddFiles { get; set; }
        public DbSet<CancelFile> CancelFiles { get; set; }
        public DbSet<LiveUpdateAdd> LiveUpdateAdds { get; set; }
        public DbSet<LiveUpdateCancel> LiveUpdateCancels { get; set; }
        public DbSet<SpecificAddFile> SpecificAddFiles { get; set; }
        public DbSet<SpecificCancelFile> SpecificCancelFiles { get; set; }
        public DbSet<FreeAccessory> FreeAccessories { get; set; }

        [DbFunctionAttribute("CostcoEntities", "split")]
        public virtual IQueryable<split_Result> split(string rowData, string splitOn)
        {
            var rowDataParameter = rowData != null ?
                new ObjectParameter("RowData", rowData) :
                new ObjectParameter("RowData", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<split_Result>("[CostcoEntities].[split](@RowData, @SplitOn)", rowDataParameter, splitOnParameter);
        }
    
        [DbFunctionAttribute("CostcoEntities", "udf_List2GuidList")]
        public virtual IQueryable<udf_List2GuidList_Result> udf_List2GuidList(string list, string delim)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimParameter = delim != null ?
                new ObjectParameter("Delim", delim) :
                new ObjectParameter("Delim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_List2GuidList_Result>("[CostcoEntities].[udf_List2GuidList](@List, @Delim)", listParameter, delimParameter);
        }

        [DbFunctionAttribute("CostcoEntities", "udf_List2Table")]
        public virtual IQueryable<udf_List2Table_Result> udf_List2Table(string list, string delim)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimParameter = delim != null ?
                new ObjectParameter("Delim", delim) :
                new ObjectParameter("Delim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_List2Table_Result>("[CostcoEntities].[udf_List2Table](@List, @Delim)", listParameter, delimParameter);
        }

        [DbFunctionAttribute("CostcoEntities", "udf_ListToIntegerTable")]
        public virtual IQueryable<udf_ListToIntegerTable_Result> udf_ListToIntegerTable(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_ListToIntegerTable_Result>("[CostcoEntities].[udf_ListToIntegerTable](@list, @delimiter)", listParameter, delimiterParameter);
        }

        [DbFunctionAttribute("CostcoEntities", "GetShipMethodForOrder")]
        public virtual IQueryable<GetShipMethodForOrder_Result> GetShipMethodForOrder(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetShipMethodForOrder_Result>("[CostcoEntities].[GetShipMethodForOrder](@OrderId)", orderIdParameter);
        }

        [DbFunctionAttribute("CostcoEntities", "GetHolidays")]
        public virtual IQueryable<GetHolidays_Result> GetHolidays(Nullable<int> getYear)
        {
            var getYearParameter = getYear.HasValue ?
                new ObjectParameter("GetYear", getYear) :
                new ObjectParameter("GetYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetHolidays_Result>("[CostcoEntities].[GetHolidays](@GetYear)", getYearParameter);
        }

        [DbFunctionAttribute("CostcoEntities", "GetZoneListForZipCode")]
        public virtual IQueryable<GetZoneListForZipCode_Result> GetZoneListForZipCode(string zipCode)
        {
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetZoneListForZipCode_Result>("[CostcoEntities].[GetZoneListForZipCode](@ZipCode)", zipCodeParameter);
        }

        [DbFunctionAttribute("CostcoEntities", "GetZonesForZipCode")]
        public virtual IQueryable<GetZonesForZipCode_Result> GetZonesForZipCode(string zipCode)
        {
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetZonesForZipCode_Result>("[CostcoEntities].[GetZonesForZipCode](@ZipCode)", zipCodeParameter);
        }
    
        public virtual int AutoHideTag()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoHideTag");
        }
    
        public virtual int CloneDeviceFeatures(Nullable<int> sourceProductId, Nullable<int> destinationProductId)
        {
            var sourceProductIdParameter = sourceProductId.HasValue ?
                new ObjectParameter("SourceProductId", sourceProductId) :
                new ObjectParameter("SourceProductId", typeof(int));
    
            var destinationProductIdParameter = destinationProductId.HasValue ?
                new ObjectParameter("DestinationProductId", destinationProductId) :
                new ObjectParameter("DestinationProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CloneDeviceFeatures", sourceProductIdParameter, destinationProductIdParameter);
        }
    
        public virtual int CreateFreeAccessory(string gersSku, string uPC, string name)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var uPCParameter = uPC != null ?
                new ObjectParameter("UPC", uPC) :
                new ObjectParameter("UPC", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateFreeAccessory", gersSkuParameter, uPCParameter, nameParameter);
        }
    
        public virtual int IsEligibleForRebate(Nullable<System.Guid> rebateGuid, string productList, string activationType, ObjectParameter result)
        {
            var rebateGuidParameter = rebateGuid.HasValue ?
                new ObjectParameter("RebateGuid", rebateGuid) :
                new ObjectParameter("RebateGuid", typeof(System.Guid));
    
            var productListParameter = productList != null ?
                new ObjectParameter("ProductList", productList) :
                new ObjectParameter("ProductList", typeof(string));
    
            var activationTypeParameter = activationType != null ?
                new ObjectParameter("ActivationType", activationType) :
                new ObjectParameter("ActivationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IsEligibleForRebate", rebateGuidParameter, productListParameter, activationTypeParameter, result);
        }
    
        public virtual ObjectResult<string> MercentProductFeed_XML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MercentProductFeed_XML");
        }
    
        public virtual int SetHoldBackQty(string gERSSku, Nullable<int> holdBackQty)
        {
            var gERSSkuParameter = gERSSku != null ?
                new ObjectParameter("GERSSku", gERSSku) :
                new ObjectParameter("GERSSku", typeof(string));
    
            var holdBackQtyParameter = holdBackQty.HasValue ?
                new ObjectParameter("HoldBackQty", holdBackQty) :
                new ObjectParameter("HoldBackQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetHoldBackQty", gERSSkuParameter, holdBackQtyParameter);
        }
    
        public virtual int spInputEditorsChoice(string ec1, string ec2, string ec3, string ec4, string ec5, string ec6, string ec7, string ec8, string ec9, string ec10, string ec11, string ec12)
        {
            var ec1Parameter = ec1 != null ?
                new ObjectParameter("ec1", ec1) :
                new ObjectParameter("ec1", typeof(string));
    
            var ec2Parameter = ec2 != null ?
                new ObjectParameter("ec2", ec2) :
                new ObjectParameter("ec2", typeof(string));
    
            var ec3Parameter = ec3 != null ?
                new ObjectParameter("ec3", ec3) :
                new ObjectParameter("ec3", typeof(string));
    
            var ec4Parameter = ec4 != null ?
                new ObjectParameter("ec4", ec4) :
                new ObjectParameter("ec4", typeof(string));
    
            var ec5Parameter = ec5 != null ?
                new ObjectParameter("ec5", ec5) :
                new ObjectParameter("ec5", typeof(string));
    
            var ec6Parameter = ec6 != null ?
                new ObjectParameter("ec6", ec6) :
                new ObjectParameter("ec6", typeof(string));
    
            var ec7Parameter = ec7 != null ?
                new ObjectParameter("ec7", ec7) :
                new ObjectParameter("ec7", typeof(string));
    
            var ec8Parameter = ec8 != null ?
                new ObjectParameter("ec8", ec8) :
                new ObjectParameter("ec8", typeof(string));
    
            var ec9Parameter = ec9 != null ?
                new ObjectParameter("ec9", ec9) :
                new ObjectParameter("ec9", typeof(string));
    
            var ec10Parameter = ec10 != null ?
                new ObjectParameter("ec10", ec10) :
                new ObjectParameter("ec10", typeof(string));
    
            var ec11Parameter = ec11 != null ?
                new ObjectParameter("ec11", ec11) :
                new ObjectParameter("ec11", typeof(string));
    
            var ec12Parameter = ec12 != null ?
                new ObjectParameter("ec12", ec12) :
                new ObjectParameter("ec12", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInputEditorsChoice", ec1Parameter, ec2Parameter, ec3Parameter, ec4Parameter, ec5Parameter, ec6Parameter, ec7Parameter, ec8Parameter, ec9Parameter, ec10Parameter, ec11Parameter, ec12Parameter);
        }
    
        public virtual int spInputEOLDates(string gersSku1, string eold1, string gersSku2, string eold2, string gersSku3, string eold3, string gersSku4, string eold4, string gersSku5, string eold5, string gersSku6, string eold6, string gersSku7, string eold7, string gersSku8, string eold8, string gersSku9, string eold9, string gersSku10, string eold10, string gersSku11, string eold11, string gersSku12, string eold12)
        {
            var gersSku1Parameter = gersSku1 != null ?
                new ObjectParameter("GersSku1", gersSku1) :
                new ObjectParameter("GersSku1", typeof(string));
    
            var eold1Parameter = eold1 != null ?
                new ObjectParameter("eold1", eold1) :
                new ObjectParameter("eold1", typeof(string));
    
            var gersSku2Parameter = gersSku2 != null ?
                new ObjectParameter("GersSku2", gersSku2) :
                new ObjectParameter("GersSku2", typeof(string));
    
            var eold2Parameter = eold2 != null ?
                new ObjectParameter("eold2", eold2) :
                new ObjectParameter("eold2", typeof(string));
    
            var gersSku3Parameter = gersSku3 != null ?
                new ObjectParameter("GersSku3", gersSku3) :
                new ObjectParameter("GersSku3", typeof(string));
    
            var eold3Parameter = eold3 != null ?
                new ObjectParameter("eold3", eold3) :
                new ObjectParameter("eold3", typeof(string));
    
            var gersSku4Parameter = gersSku4 != null ?
                new ObjectParameter("GersSku4", gersSku4) :
                new ObjectParameter("GersSku4", typeof(string));
    
            var eold4Parameter = eold4 != null ?
                new ObjectParameter("eold4", eold4) :
                new ObjectParameter("eold4", typeof(string));
    
            var gersSku5Parameter = gersSku5 != null ?
                new ObjectParameter("GersSku5", gersSku5) :
                new ObjectParameter("GersSku5", typeof(string));
    
            var eold5Parameter = eold5 != null ?
                new ObjectParameter("eold5", eold5) :
                new ObjectParameter("eold5", typeof(string));
    
            var gersSku6Parameter = gersSku6 != null ?
                new ObjectParameter("GersSku6", gersSku6) :
                new ObjectParameter("GersSku6", typeof(string));
    
            var eold6Parameter = eold6 != null ?
                new ObjectParameter("eold6", eold6) :
                new ObjectParameter("eold6", typeof(string));
    
            var gersSku7Parameter = gersSku7 != null ?
                new ObjectParameter("GersSku7", gersSku7) :
                new ObjectParameter("GersSku7", typeof(string));
    
            var eold7Parameter = eold7 != null ?
                new ObjectParameter("eold7", eold7) :
                new ObjectParameter("eold7", typeof(string));
    
            var gersSku8Parameter = gersSku8 != null ?
                new ObjectParameter("GersSku8", gersSku8) :
                new ObjectParameter("GersSku8", typeof(string));
    
            var eold8Parameter = eold8 != null ?
                new ObjectParameter("eold8", eold8) :
                new ObjectParameter("eold8", typeof(string));
    
            var gersSku9Parameter = gersSku9 != null ?
                new ObjectParameter("GersSku9", gersSku9) :
                new ObjectParameter("GersSku9", typeof(string));
    
            var eold9Parameter = eold9 != null ?
                new ObjectParameter("eold9", eold9) :
                new ObjectParameter("eold9", typeof(string));
    
            var gersSku10Parameter = gersSku10 != null ?
                new ObjectParameter("GersSku10", gersSku10) :
                new ObjectParameter("GersSku10", typeof(string));
    
            var eold10Parameter = eold10 != null ?
                new ObjectParameter("eold10", eold10) :
                new ObjectParameter("eold10", typeof(string));
    
            var gersSku11Parameter = gersSku11 != null ?
                new ObjectParameter("GersSku11", gersSku11) :
                new ObjectParameter("GersSku11", typeof(string));
    
            var eold11Parameter = eold11 != null ?
                new ObjectParameter("eold11", eold11) :
                new ObjectParameter("eold11", typeof(string));
    
            var gersSku12Parameter = gersSku12 != null ?
                new ObjectParameter("GersSku12", gersSku12) :
                new ObjectParameter("GersSku12", typeof(string));
    
            var eold12Parameter = eold12 != null ?
                new ObjectParameter("eold12", eold12) :
                new ObjectParameter("eold12", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInputEOLDates", gersSku1Parameter, eold1Parameter, gersSku2Parameter, eold2Parameter, gersSku3Parameter, eold3Parameter, gersSku4Parameter, eold4Parameter, gersSku5Parameter, eold5Parameter, gersSku6Parameter, eold6Parameter, gersSku7Parameter, eold7Parameter, gersSku8Parameter, eold8Parameter, gersSku9Parameter, eold9Parameter, gersSku10Parameter, eold10Parameter, gersSku11Parameter, eold11Parameter, gersSku12Parameter, eold12Parameter);
        }
    
        public virtual int spInputLaunchDates(string gersSku1, string ld1, string gersSku2, string ld2, string gersSku3, string ld3, string gersSku4, string ld4, string gersSku5, string ld5, string gersSku6, string ld6, string gersSku7, string ld7, string gersSku8, string ld8, string gersSku9, string ld9, string gersSku10, string ld10, string gersSku11, string ld11, string gersSku12, string ld12)
        {
            var gersSku1Parameter = gersSku1 != null ?
                new ObjectParameter("GersSku1", gersSku1) :
                new ObjectParameter("GersSku1", typeof(string));
    
            var ld1Parameter = ld1 != null ?
                new ObjectParameter("ld1", ld1) :
                new ObjectParameter("ld1", typeof(string));
    
            var gersSku2Parameter = gersSku2 != null ?
                new ObjectParameter("GersSku2", gersSku2) :
                new ObjectParameter("GersSku2", typeof(string));
    
            var ld2Parameter = ld2 != null ?
                new ObjectParameter("ld2", ld2) :
                new ObjectParameter("ld2", typeof(string));
    
            var gersSku3Parameter = gersSku3 != null ?
                new ObjectParameter("GersSku3", gersSku3) :
                new ObjectParameter("GersSku3", typeof(string));
    
            var ld3Parameter = ld3 != null ?
                new ObjectParameter("ld3", ld3) :
                new ObjectParameter("ld3", typeof(string));
    
            var gersSku4Parameter = gersSku4 != null ?
                new ObjectParameter("GersSku4", gersSku4) :
                new ObjectParameter("GersSku4", typeof(string));
    
            var ld4Parameter = ld4 != null ?
                new ObjectParameter("ld4", ld4) :
                new ObjectParameter("ld4", typeof(string));
    
            var gersSku5Parameter = gersSku5 != null ?
                new ObjectParameter("GersSku5", gersSku5) :
                new ObjectParameter("GersSku5", typeof(string));
    
            var ld5Parameter = ld5 != null ?
                new ObjectParameter("ld5", ld5) :
                new ObjectParameter("ld5", typeof(string));
    
            var gersSku6Parameter = gersSku6 != null ?
                new ObjectParameter("GersSku6", gersSku6) :
                new ObjectParameter("GersSku6", typeof(string));
    
            var ld6Parameter = ld6 != null ?
                new ObjectParameter("ld6", ld6) :
                new ObjectParameter("ld6", typeof(string));
    
            var gersSku7Parameter = gersSku7 != null ?
                new ObjectParameter("GersSku7", gersSku7) :
                new ObjectParameter("GersSku7", typeof(string));
    
            var ld7Parameter = ld7 != null ?
                new ObjectParameter("ld7", ld7) :
                new ObjectParameter("ld7", typeof(string));
    
            var gersSku8Parameter = gersSku8 != null ?
                new ObjectParameter("GersSku8", gersSku8) :
                new ObjectParameter("GersSku8", typeof(string));
    
            var ld8Parameter = ld8 != null ?
                new ObjectParameter("ld8", ld8) :
                new ObjectParameter("ld8", typeof(string));
    
            var gersSku9Parameter = gersSku9 != null ?
                new ObjectParameter("GersSku9", gersSku9) :
                new ObjectParameter("GersSku9", typeof(string));
    
            var ld9Parameter = ld9 != null ?
                new ObjectParameter("ld9", ld9) :
                new ObjectParameter("ld9", typeof(string));
    
            var gersSku10Parameter = gersSku10 != null ?
                new ObjectParameter("GersSku10", gersSku10) :
                new ObjectParameter("GersSku10", typeof(string));
    
            var ld10Parameter = ld10 != null ?
                new ObjectParameter("ld10", ld10) :
                new ObjectParameter("ld10", typeof(string));
    
            var gersSku11Parameter = gersSku11 != null ?
                new ObjectParameter("GersSku11", gersSku11) :
                new ObjectParameter("GersSku11", typeof(string));
    
            var ld11Parameter = ld11 != null ?
                new ObjectParameter("ld11", ld11) :
                new ObjectParameter("ld11", typeof(string));
    
            var gersSku12Parameter = gersSku12 != null ?
                new ObjectParameter("GersSku12", gersSku12) :
                new ObjectParameter("GersSku12", typeof(string));
    
            var ld12Parameter = ld12 != null ?
                new ObjectParameter("ld12", ld12) :
                new ObjectParameter("ld12", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInputLaunchDates", gersSku1Parameter, ld1Parameter, gersSku2Parameter, ld2Parameter, gersSku3Parameter, ld3Parameter, gersSku4Parameter, ld4Parameter, gersSku5Parameter, ld5Parameter, gersSku6Parameter, ld6Parameter, gersSku7Parameter, ld7Parameter, gersSku8Parameter, ld8Parameter, gersSku9Parameter, ld9Parameter, gersSku10Parameter, ld10Parameter, gersSku11Parameter, ld11Parameter, gersSku12Parameter, ld12Parameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_CheckSiteCache(Nullable<System.Guid> siteGUID, Nullable<System.Guid> environmentGUID)
        {
            var siteGUIDParameter = siteGUID.HasValue ?
                new ObjectParameter("SiteGUID", siteGUID) :
                new ObjectParameter("SiteGUID", typeof(System.Guid));
    
            var environmentGUIDParameter = environmentGUID.HasValue ?
                new ObjectParameter("EnvironmentGUID", environmentGUID) :
                new ObjectParameter("EnvironmentGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_CheckSiteCache", siteGUIDParameter, environmentGUIDParameter);
        }
    
        public virtual int sp_CopyRelease(Nullable<long> releaseID)
        {
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CopyRelease", releaseIDParameter);
        }
    
        public virtual int sp_CopyReleaseTemplate(Nullable<long> releaseTemplateID)
        {
            var releaseTemplateIDParameter = releaseTemplateID.HasValue ?
                new ObjectParameter("ReleaseTemplateID", releaseTemplateID) :
                new ObjectParameter("ReleaseTemplateID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CopyReleaseTemplate", releaseTemplateIDParameter);
        }
    
        public virtual int sp_DeleteRelease(Nullable<long> releaseID)
        {
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteRelease", releaseIDParameter);
        }
    
        public virtual int sp_GetActiveRebate(Nullable<System.DateTime> currentDateTime, string sKU, string carrier, Nullable<int> number)
        {
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var carrierParameter = carrier != null ?
                new ObjectParameter("Carrier", carrier) :
                new ObjectParameter("Carrier", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetActiveRebate", currentDateTimeParameter, sKUParameter, carrierParameter, numberParameter);
        }
    
        public virtual int sp_GetActiveRebate_Test(Nullable<System.DateTime> currentDateTime, string sKU, string carrier, Nullable<int> number)
        {
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var carrierParameter = carrier != null ?
                new ObjectParameter("Carrier", carrier) :
                new ObjectParameter("Carrier", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetActiveRebate_Test", currentDateTimeParameter, sKUParameter, carrierParameter, numberParameter);
        }
    
        public virtual ObjectResult<sp_GetReleaseDetails_Result> sp_GetReleaseDetails(Nullable<long> releaseID)
        {
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReleaseDetails_Result>("sp_GetReleaseDetails", releaseIDParameter);
        }
    
        public virtual ObjectResult<sp_GetReleaseTemplateContent_Result> sp_GetReleaseTemplateContent(Nullable<long> releaseTemplateID, string carrier)
        {
            var releaseTemplateIDParameter = releaseTemplateID.HasValue ?
                new ObjectParameter("ReleaseTemplateID", releaseTemplateID) :
                new ObjectParameter("ReleaseTemplateID", typeof(long));
    
            var carrierParameter = carrier != null ?
                new ObjectParameter("Carrier", carrier) :
                new ObjectParameter("Carrier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReleaseTemplateContent_Result>("sp_GetReleaseTemplateContent", releaseTemplateIDParameter, carrierParameter);
        }
    
        public virtual ObjectResult<sp_GetReleaseTemplateImage_Result> sp_GetReleaseTemplateImage(Nullable<System.Guid> imageGUID)
        {
            var imageGUIDParameter = imageGUID.HasValue ?
                new ObjectParameter("ImageGUID", imageGUID) :
                new ObjectParameter("ImageGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReleaseTemplateImage_Result>("sp_GetReleaseTemplateImage", imageGUIDParameter);
        }
    
        public virtual ObjectResult<sp_GetReleaseTemplates_Result> sp_GetReleaseTemplates(Nullable<System.DateTime> currentDateTime, Nullable<System.Guid> environmentGUID, Nullable<System.Guid> siteGUID, Nullable<System.Guid> templateGUID, Nullable<System.Guid> locationGUID, Nullable<long> releaseID, Nullable<long> releaseTemplateID, string carrier)
        {
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            var environmentGUIDParameter = environmentGUID.HasValue ?
                new ObjectParameter("EnvironmentGUID", environmentGUID) :
                new ObjectParameter("EnvironmentGUID", typeof(System.Guid));
    
            var siteGUIDParameter = siteGUID.HasValue ?
                new ObjectParameter("SiteGUID", siteGUID) :
                new ObjectParameter("SiteGUID", typeof(System.Guid));
    
            var templateGUIDParameter = templateGUID.HasValue ?
                new ObjectParameter("TemplateGUID", templateGUID) :
                new ObjectParameter("TemplateGUID", typeof(System.Guid));
    
            var locationGUIDParameter = locationGUID.HasValue ?
                new ObjectParameter("LocationGUID", locationGUID) :
                new ObjectParameter("LocationGUID", typeof(System.Guid));
    
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            var releaseTemplateIDParameter = releaseTemplateID.HasValue ?
                new ObjectParameter("ReleaseTemplateID", releaseTemplateID) :
                new ObjectParameter("ReleaseTemplateID", typeof(long));
    
            var carrierParameter = carrier != null ?
                new ObjectParameter("Carrier", carrier) :
                new ObjectParameter("Carrier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReleaseTemplates_Result>("sp_GetReleaseTemplates", currentDateTimeParameter, environmentGUIDParameter, siteGUIDParameter, templateGUIDParameter, locationGUIDParameter, releaseIDParameter, releaseTemplateIDParameter, carrierParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetReleaseVisible(Nullable<System.DateTime> currentDateTime, Nullable<long> releaseID, Nullable<System.Guid> environmentGUID, Nullable<System.Guid> siteGUID)
        {
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            var environmentGUIDParameter = environmentGUID.HasValue ?
                new ObjectParameter("EnvironmentGUID", environmentGUID) :
                new ObjectParameter("EnvironmentGUID", typeof(System.Guid));
    
            var siteGUIDParameter = siteGUID.HasValue ?
                new ObjectParameter("SiteGUID", siteGUID) :
                new ObjectParameter("SiteGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetReleaseVisible", currentDateTimeParameter, releaseIDParameter, environmentGUIDParameter, siteGUIDParameter);
        }
    
        public virtual ObjectResult<sp_GetSiteURL_Result> sp_GetSiteURL(string uRL)
        {
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSiteURL_Result>("sp_GetSiteURL", uRLParameter);
        }
    
        public virtual ObjectResult<sp_GetStaticSiteURL_Result> sp_GetStaticSiteURL(string uRL)
        {
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStaticSiteURL_Result>("sp_GetStaticSiteURL", uRLParameter);
        }
    
        public virtual ObjectResult<sp_GetTemplateChildren_Result> sp_GetTemplateChildren(Nullable<System.Guid> templateGUID)
        {
            var templateGUIDParameter = templateGUID.HasValue ?
                new ObjectParameter("TemplateGUID", templateGUID) :
                new ObjectParameter("TemplateGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTemplateChildren_Result>("sp_GetTemplateChildren", templateGUIDParameter);
        }
    
        public virtual ObjectResult<sp_GetTemplateData_Result> sp_GetTemplateData(Nullable<long> templateID, Nullable<long> environmentID, Nullable<long> siteGroupID)
        {
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(long));
    
            var environmentIDParameter = environmentID.HasValue ?
                new ObjectParameter("EnvironmentID", environmentID) :
                new ObjectParameter("EnvironmentID", typeof(long));
    
            var siteGroupIDParameter = siteGroupID.HasValue ?
                new ObjectParameter("SiteGroupID", siteGroupID) :
                new ObjectParameter("SiteGroupID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTemplateData_Result>("sp_GetTemplateData", templateIDParameter, environmentIDParameter, siteGroupIDParameter);
        }
    
        public virtual ObjectResult<string> sp_GetTemplateTags(Nullable<long> templateID)
        {
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetTemplateTags", templateIDParameter);
        }
    
        public virtual int CommandExecute(string command, string commandType, Nullable<int> mode, string comment, string databaseName, string schemaName, string objectName, string objectType, string indexName, Nullable<int> indexType, string statisticsName, Nullable<int> partitionNumber, string extendedInfo, string logToTable, string execute)
        {
            var commandParameter = command != null ?
                new ObjectParameter("Command", command) :
                new ObjectParameter("Command", typeof(string));
    
            var commandTypeParameter = commandType != null ?
                new ObjectParameter("CommandType", commandType) :
                new ObjectParameter("CommandType", typeof(string));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var databaseNameParameter = databaseName != null ?
                new ObjectParameter("DatabaseName", databaseName) :
                new ObjectParameter("DatabaseName", typeof(string));
    
            var schemaNameParameter = schemaName != null ?
                new ObjectParameter("SchemaName", schemaName) :
                new ObjectParameter("SchemaName", typeof(string));
    
            var objectNameParameter = objectName != null ?
                new ObjectParameter("ObjectName", objectName) :
                new ObjectParameter("ObjectName", typeof(string));
    
            var objectTypeParameter = objectType != null ?
                new ObjectParameter("ObjectType", objectType) :
                new ObjectParameter("ObjectType", typeof(string));
    
            var indexNameParameter = indexName != null ?
                new ObjectParameter("IndexName", indexName) :
                new ObjectParameter("IndexName", typeof(string));
    
            var indexTypeParameter = indexType.HasValue ?
                new ObjectParameter("IndexType", indexType) :
                new ObjectParameter("IndexType", typeof(int));
    
            var statisticsNameParameter = statisticsName != null ?
                new ObjectParameter("StatisticsName", statisticsName) :
                new ObjectParameter("StatisticsName", typeof(string));
    
            var partitionNumberParameter = partitionNumber.HasValue ?
                new ObjectParameter("PartitionNumber", partitionNumber) :
                new ObjectParameter("PartitionNumber", typeof(int));
    
            var extendedInfoParameter = extendedInfo != null ?
                new ObjectParameter("ExtendedInfo", extendedInfo) :
                new ObjectParameter("ExtendedInfo", typeof(string));
    
            var logToTableParameter = logToTable != null ?
                new ObjectParameter("LogToTable", logToTable) :
                new ObjectParameter("LogToTable", typeof(string));
    
            var executeParameter = execute != null ?
                new ObjectParameter("Execute", execute) :
                new ObjectParameter("Execute", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CommandExecute", commandParameter, commandTypeParameter, modeParameter, commentParameter, databaseNameParameter, schemaNameParameter, objectNameParameter, objectTypeParameter, indexNameParameter, indexTypeParameter, statisticsNameParameter, partitionNumberParameter, extendedInfoParameter, logToTableParameter, executeParameter);
        }
    
        public virtual int CreateObjectSprintCatalogLoadProcess_usp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateObjectSprintCatalogLoadProcess_usp");
        }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual ObjectResult<string> MercentFeed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MercentFeed");
        }
    
        public virtual int s_ftp_PutFile(string fTPServer, string fTPUser, string fTPPWD, string fTPPath, string fTPFileName, string sourcePath, string sourceFile, string workdir)
        {
            var fTPServerParameter = fTPServer != null ?
                new ObjectParameter("FTPServer", fTPServer) :
                new ObjectParameter("FTPServer", typeof(string));
    
            var fTPUserParameter = fTPUser != null ?
                new ObjectParameter("FTPUser", fTPUser) :
                new ObjectParameter("FTPUser", typeof(string));
    
            var fTPPWDParameter = fTPPWD != null ?
                new ObjectParameter("FTPPWD", fTPPWD) :
                new ObjectParameter("FTPPWD", typeof(string));
    
            var fTPPathParameter = fTPPath != null ?
                new ObjectParameter("FTPPath", fTPPath) :
                new ObjectParameter("FTPPath", typeof(string));
    
            var fTPFileNameParameter = fTPFileName != null ?
                new ObjectParameter("FTPFileName", fTPFileName) :
                new ObjectParameter("FTPFileName", typeof(string));
    
            var sourcePathParameter = sourcePath != null ?
                new ObjectParameter("SourcePath", sourcePath) :
                new ObjectParameter("SourcePath", typeof(string));
    
            var sourceFileParameter = sourceFile != null ?
                new ObjectParameter("SourceFile", sourceFile) :
                new ObjectParameter("SourceFile", typeof(string));
    
            var workdirParameter = workdir != null ?
                new ObjectParameter("workdir", workdir) :
                new ObjectParameter("workdir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("s_ftp_PutFile", fTPServerParameter, fTPUserParameter, fTPPWDParameter, fTPPathParameter, fTPFileNameParameter, sourcePathParameter, sourceFileParameter, workdirParameter);
        }
    
        public virtual int SaveTableAsHTML(string pCWrite, string dBFetch, string dBWhere, string dBThere, Nullable<bool> dBUltra, string tableStyle, string cSS, Nullable<bool> header)
        {
            var pCWriteParameter = pCWrite != null ?
                new ObjectParameter("PCWrite", pCWrite) :
                new ObjectParameter("PCWrite", typeof(string));
    
            var dBFetchParameter = dBFetch != null ?
                new ObjectParameter("DBFetch", dBFetch) :
                new ObjectParameter("DBFetch", typeof(string));
    
            var dBWhereParameter = dBWhere != null ?
                new ObjectParameter("DBWhere", dBWhere) :
                new ObjectParameter("DBWhere", typeof(string));
    
            var dBThereParameter = dBThere != null ?
                new ObjectParameter("DBThere", dBThere) :
                new ObjectParameter("DBThere", typeof(string));
    
            var dBUltraParameter = dBUltra.HasValue ?
                new ObjectParameter("DBUltra", dBUltra) :
                new ObjectParameter("DBUltra", typeof(bool));
    
            var tableStyleParameter = tableStyle != null ?
                new ObjectParameter("TableStyle", tableStyle) :
                new ObjectParameter("TableStyle", typeof(string));
    
            var cSSParameter = cSS != null ?
                new ObjectParameter("CSS", cSS) :
                new ObjectParameter("CSS", typeof(string));
    
            var headerParameter = header.HasValue ?
                new ObjectParameter("Header", header) :
                new ObjectParameter("Header", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveTableAsHTML", pCWriteParameter, dBFetchParameter, dBWhereParameter, dBThereParameter, dBUltraParameter, tableStyleParameter, cSSParameter, headerParameter);
        }
    
        public virtual int ScriptforSprintLoadProcess_ups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ScriptforSprintLoadProcess_ups");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_CreateManualOrder(string firstName, string lastName, string company, string address1, string city, string state, string zip, string daytimePhone, string eveningPhone, string emailAddress, Nullable<int> copyOrder, Nullable<int> numberOfPhones)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var daytimePhoneParameter = daytimePhone != null ?
                new ObjectParameter("DaytimePhone", daytimePhone) :
                new ObjectParameter("DaytimePhone", typeof(string));
    
            var eveningPhoneParameter = eveningPhone != null ?
                new ObjectParameter("EveningPhone", eveningPhone) :
                new ObjectParameter("EveningPhone", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var copyOrderParameter = copyOrder.HasValue ?
                new ObjectParameter("CopyOrder", copyOrder) :
                new ObjectParameter("CopyOrder", typeof(int));
    
            var numberOfPhonesParameter = numberOfPhones.HasValue ?
                new ObjectParameter("NumberOfPhones", numberOfPhones) :
                new ObjectParameter("NumberOfPhones", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateManualOrder", firstNameParameter, lastNameParameter, companyParameter, address1Parameter, cityParameter, stateParameter, zipParameter, daytimePhoneParameter, eveningPhoneParameter, emailAddressParameter, copyOrderParameter, numberOfPhonesParameter);
        }
    
        public virtual int sp_CreateUser(string iP, string host, string browser, string httpFrom, Nullable<int> sT, Nullable<int> sT2, Nullable<int> sT3)
        {
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var hostParameter = host != null ?
                new ObjectParameter("Host", host) :
                new ObjectParameter("Host", typeof(string));
    
            var browserParameter = browser != null ?
                new ObjectParameter("Browser", browser) :
                new ObjectParameter("Browser", typeof(string));
    
            var httpFromParameter = httpFrom != null ?
                new ObjectParameter("HttpFrom", httpFrom) :
                new ObjectParameter("HttpFrom", typeof(string));
    
            var sTParameter = sT.HasValue ?
                new ObjectParameter("ST", sT) :
                new ObjectParameter("ST", typeof(int));
    
            var sT2Parameter = sT2.HasValue ?
                new ObjectParameter("ST2", sT2) :
                new ObjectParameter("ST2", typeof(int));
    
            var sT3Parameter = sT3.HasValue ?
                new ObjectParameter("ST3", sT3) :
                new ObjectParameter("ST3", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateUser", iPParameter, hostParameter, browserParameter, httpFromParameter, sTParameter, sT2Parameter, sT3Parameter);
        }
    
        public virtual int sp_DeleteBackupsFromDBDirectory(string directory)
        {
            var directoryParameter = directory != null ?
                new ObjectParameter("directory", directory) :
                new ObjectParameter("directory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteBackupsFromDBDirectory", directoryParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_ftp_GetDir(string fTPServer, string fTPUser, string fTPPWD, string fTPPath, string workdir)
        {
            var fTPServerParameter = fTPServer != null ?
                new ObjectParameter("FTPServer", fTPServer) :
                new ObjectParameter("FTPServer", typeof(string));
    
            var fTPUserParameter = fTPUser != null ?
                new ObjectParameter("FTPUser", fTPUser) :
                new ObjectParameter("FTPUser", typeof(string));
    
            var fTPPWDParameter = fTPPWD != null ?
                new ObjectParameter("FTPPWD", fTPPWD) :
                new ObjectParameter("FTPPWD", typeof(string));
    
            var fTPPathParameter = fTPPath != null ?
                new ObjectParameter("FTPPath", fTPPath) :
                new ObjectParameter("FTPPath", typeof(string));
    
            var workdirParameter = workdir != null ?
                new ObjectParameter("workdir", workdir) :
                new ObjectParameter("workdir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ftp_GetDir", fTPServerParameter, fTPUserParameter, fTPPWDParameter, fTPPathParameter, workdirParameter);
        }
    
        public virtual int sp_FTPDownload(Nullable<int> ftpid)
        {
            var ftpidParameter = ftpid.HasValue ?
                new ObjectParameter("ftpid", ftpid) :
                new ObjectParameter("ftpid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FTPDownload", ftpidParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_readTextFile(string filename)
        {
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_readTextFile", filenameParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<string> sp_TruncateDBLog(string dbname)
        {
            var dbnameParameter = dbname != null ?
                new ObjectParameter("dbname", dbname) :
                new ObjectParameter("dbname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_TruncateDBLog", dbnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spSaveXMLVariableToFile(string theXML, string filename)
        {
            var theXMLParameter = theXML != null ?
                new ObjectParameter("TheXML", theXML) :
                new ObjectParameter("TheXML", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveXMLVariableToFile", theXMLParameter, filenameParameter);
        }
    
        public virtual int spTHD7Report(Nullable<System.DateTime> startdt, Nullable<System.DateTime> enddt)
        {
            var startdtParameter = startdt.HasValue ?
                new ObjectParameter("startdt", startdt) :
                new ObjectParameter("startdt", typeof(System.DateTime));
    
            var enddtParameter = enddt.HasValue ?
                new ObjectParameter("enddt", enddt) :
                new ObjectParameter("enddt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTHD7Report", startdtParameter, enddtParameter);
        }
    
        public virtual int TruncateObjectsSprintCataLogLoadProcess_usp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TruncateObjectsSprintCataLogLoadProcess_usp");
        }
    
        public virtual int usp_KioskECOMCommissions(Nullable<System.DateTime> orderBeginDate, Nullable<System.DateTime> orderEndDate, string employeeID)
        {
            var orderBeginDateParameter = orderBeginDate.HasValue ?
                new ObjectParameter("OrderBeginDate", orderBeginDate) :
                new ObjectParameter("OrderBeginDate", typeof(System.DateTime));
    
            var orderEndDateParameter = orderEndDate.HasValue ?
                new ObjectParameter("OrderEndDate", orderEndDate) :
                new ObjectParameter("OrderEndDate", typeof(System.DateTime));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_KioskECOMCommissions", orderBeginDateParameter, orderEndDateParameter, employeeIDParameter);
        }
    
        public virtual int usp_KioskECOMCommissions_new(string employeeID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_KioskECOMCommissions_new", employeeIDParameter);
        }
    
        public virtual int AddFakeInventory(string gersSku, Nullable<decimal> cost, Nullable<int> quantity)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFakeInventory", gersSkuParameter, costParameter, quantityParameter);
        }
    
        public virtual ObjectResult<DD_ExecSummary_Result> DD_ExecSummary(Nullable<System.DateTime> tWStartDate, Nullable<System.DateTime> tWEndDate)
        {
            var tWStartDateParameter = tWStartDate.HasValue ?
                new ObjectParameter("TWStartDate", tWStartDate) :
                new ObjectParameter("TWStartDate", typeof(System.DateTime));
    
            var tWEndDateParameter = tWEndDate.HasValue ?
                new ObjectParameter("TWEndDate", tWEndDate) :
                new ObjectParameter("TWEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DD_ExecSummary_Result>("DD_ExecSummary", tWStartDateParameter, tWEndDateParameter);
        }
    
        public virtual ObjectResult<DD_ExecSummaryStatus_Result> DD_ExecSummaryStatus(Nullable<System.DateTime> tWStartDate, Nullable<System.DateTime> tWEndDate)
        {
            var tWStartDateParameter = tWStartDate.HasValue ?
                new ObjectParameter("TWStartDate", tWStartDate) :
                new ObjectParameter("TWStartDate", typeof(System.DateTime));
    
            var tWEndDateParameter = tWEndDate.HasValue ?
                new ObjectParameter("TWEndDate", tWEndDate) :
                new ObjectParameter("TWEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DD_ExecSummaryStatus_Result>("DD_ExecSummaryStatus", tWStartDateParameter, tWEndDateParameter);
        }
    
        public virtual ObjectResult<DD_TotalVisits_Result> DD_TotalVisits(Nullable<System.DateTime> tWStartDate, Nullable<System.DateTime> tWEndDate)
        {
            var tWStartDateParameter = tWStartDate.HasValue ?
                new ObjectParameter("TWStartDate", tWStartDate) :
                new ObjectParameter("TWStartDate", typeof(System.DateTime));
    
            var tWEndDateParameter = tWEndDate.HasValue ?
                new ObjectParameter("TWEndDate", tWEndDate) :
                new ObjectParameter("TWEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DD_TotalVisits_Result>("DD_TotalVisits", tWStartDateParameter, tWEndDateParameter);
        }
    
        public virtual int DatabaseIntegrityCheck(string checkCommands, string physicalOnly, string noIndex, string extendedLogicalChecks, string tabLock, string fileGroups, string objects, string logToTable, string execute)
        {
            var checkCommandsParameter = checkCommands != null ?
                new ObjectParameter("CheckCommands", checkCommands) :
                new ObjectParameter("CheckCommands", typeof(string));
    
            var physicalOnlyParameter = physicalOnly != null ?
                new ObjectParameter("PhysicalOnly", physicalOnly) :
                new ObjectParameter("PhysicalOnly", typeof(string));
    
            var noIndexParameter = noIndex != null ?
                new ObjectParameter("NoIndex", noIndex) :
                new ObjectParameter("NoIndex", typeof(string));
    
            var extendedLogicalChecksParameter = extendedLogicalChecks != null ?
                new ObjectParameter("ExtendedLogicalChecks", extendedLogicalChecks) :
                new ObjectParameter("ExtendedLogicalChecks", typeof(string));
    
            var tabLockParameter = tabLock != null ?
                new ObjectParameter("TabLock", tabLock) :
                new ObjectParameter("TabLock", typeof(string));
    
            var fileGroupsParameter = fileGroups != null ?
                new ObjectParameter("FileGroups", fileGroups) :
                new ObjectParameter("FileGroups", typeof(string));
    
            var objectsParameter = objects != null ?
                new ObjectParameter("Objects", objects) :
                new ObjectParameter("Objects", typeof(string));
    
            var logToTableParameter = logToTable != null ?
                new ObjectParameter("LogToTable", logToTable) :
                new ObjectParameter("LogToTable", typeof(string));
    
            var executeParameter = execute != null ?
                new ObjectParameter("Execute", execute) :
                new ObjectParameter("Execute", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DatabaseIntegrityCheck", checkCommandsParameter, physicalOnlyParameter, noIndexParameter, extendedLogicalChecksParameter, tabLockParameter, fileGroupsParameter, objectsParameter, logToTableParameter, executeParameter);
        }
    
        public virtual ObjectResult<FindUnUsedTables_usp_Result> FindUnUsedTables_usp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindUnUsedTables_usp_Result>("FindUnUsedTables_usp");
        }
    
        public virtual int IndexOptimize(string fragmentationLow, string fragmentationMedium, string fragmentationHigh, Nullable<int> fragmentationLevel1, Nullable<int> fragmentationLevel2, Nullable<int> pageCountLevel, string sortInTempdb, Nullable<int> maxDOP, Nullable<int> fillFactor, string padIndex, string lOBCompaction, string updateStatistics, string onlyModifiedStatistics, Nullable<int> statisticsSample, string statisticsResample, string partitionLevel, Nullable<int> timeLimit, string indexes, Nullable<int> delay, string logToTable, string execute)
        {
            var fragmentationLowParameter = fragmentationLow != null ?
                new ObjectParameter("FragmentationLow", fragmentationLow) :
                new ObjectParameter("FragmentationLow", typeof(string));
    
            var fragmentationMediumParameter = fragmentationMedium != null ?
                new ObjectParameter("FragmentationMedium", fragmentationMedium) :
                new ObjectParameter("FragmentationMedium", typeof(string));
    
            var fragmentationHighParameter = fragmentationHigh != null ?
                new ObjectParameter("FragmentationHigh", fragmentationHigh) :
                new ObjectParameter("FragmentationHigh", typeof(string));
    
            var fragmentationLevel1Parameter = fragmentationLevel1.HasValue ?
                new ObjectParameter("FragmentationLevel1", fragmentationLevel1) :
                new ObjectParameter("FragmentationLevel1", typeof(int));
    
            var fragmentationLevel2Parameter = fragmentationLevel2.HasValue ?
                new ObjectParameter("FragmentationLevel2", fragmentationLevel2) :
                new ObjectParameter("FragmentationLevel2", typeof(int));
    
            var pageCountLevelParameter = pageCountLevel.HasValue ?
                new ObjectParameter("PageCountLevel", pageCountLevel) :
                new ObjectParameter("PageCountLevel", typeof(int));
    
            var sortInTempdbParameter = sortInTempdb != null ?
                new ObjectParameter("SortInTempdb", sortInTempdb) :
                new ObjectParameter("SortInTempdb", typeof(string));
    
            var maxDOPParameter = maxDOP.HasValue ?
                new ObjectParameter("MaxDOP", maxDOP) :
                new ObjectParameter("MaxDOP", typeof(int));
    
            var fillFactorParameter = fillFactor.HasValue ?
                new ObjectParameter("FillFactor", fillFactor) :
                new ObjectParameter("FillFactor", typeof(int));
    
            var padIndexParameter = padIndex != null ?
                new ObjectParameter("PadIndex", padIndex) :
                new ObjectParameter("PadIndex", typeof(string));
    
            var lOBCompactionParameter = lOBCompaction != null ?
                new ObjectParameter("LOBCompaction", lOBCompaction) :
                new ObjectParameter("LOBCompaction", typeof(string));
    
            var updateStatisticsParameter = updateStatistics != null ?
                new ObjectParameter("UpdateStatistics", updateStatistics) :
                new ObjectParameter("UpdateStatistics", typeof(string));
    
            var onlyModifiedStatisticsParameter = onlyModifiedStatistics != null ?
                new ObjectParameter("OnlyModifiedStatistics", onlyModifiedStatistics) :
                new ObjectParameter("OnlyModifiedStatistics", typeof(string));
    
            var statisticsSampleParameter = statisticsSample.HasValue ?
                new ObjectParameter("StatisticsSample", statisticsSample) :
                new ObjectParameter("StatisticsSample", typeof(int));
    
            var statisticsResampleParameter = statisticsResample != null ?
                new ObjectParameter("StatisticsResample", statisticsResample) :
                new ObjectParameter("StatisticsResample", typeof(string));
    
            var partitionLevelParameter = partitionLevel != null ?
                new ObjectParameter("PartitionLevel", partitionLevel) :
                new ObjectParameter("PartitionLevel", typeof(string));
    
            var timeLimitParameter = timeLimit.HasValue ?
                new ObjectParameter("TimeLimit", timeLimit) :
                new ObjectParameter("TimeLimit", typeof(int));
    
            var indexesParameter = indexes != null ?
                new ObjectParameter("Indexes", indexes) :
                new ObjectParameter("Indexes", typeof(string));
    
            var delayParameter = delay.HasValue ?
                new ObjectParameter("Delay", delay) :
                new ObjectParameter("Delay", typeof(int));
    
            var logToTableParameter = logToTable != null ?
                new ObjectParameter("LogToTable", logToTable) :
                new ObjectParameter("LogToTable", typeof(string));
    
            var executeParameter = execute != null ?
                new ObjectParameter("Execute", execute) :
                new ObjectParameter("Execute", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IndexOptimize", fragmentationLowParameter, fragmentationMediumParameter, fragmentationHighParameter, fragmentationLevel1Parameter, fragmentationLevel2Parameter, pageCountLevelParameter, sortInTempdbParameter, maxDOPParameter, fillFactorParameter, padIndexParameter, lOBCompactionParameter, updateStatisticsParameter, onlyModifiedStatisticsParameter, statisticsSampleParameter, statisticsResampleParameter, partitionLevelParameter, timeLimitParameter, indexesParameter, delayParameter, logToTableParameter, executeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddItemOrderDetail(Nullable<long> orderid, string line, string addPart)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("Orderid", orderid) :
                new ObjectParameter("Orderid", typeof(long));
    
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var addPartParameter = addPart != null ?
                new ObjectParameter("AddPart", addPart) :
                new ObjectParameter("AddPart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddItemOrderDetail", orderidParameter, lineParameter, addPartParameter);
        }
    
        public virtual ObjectResult<CancelledOrderInventory_Result> CancelledOrderInventory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CancelledOrderInventory_Result>("CancelledOrderInventory");
        }
    
        public virtual int FixShippingMethod(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FixShippingMethod", orderIDParameter);
        }
    
        public virtual int sp_AddHistory(Nullable<long> queueID, string changesMade, string changedBy)
        {
            var queueIDParameter = queueID.HasValue ?
                new ObjectParameter("QueueID", queueID) :
                new ObjectParameter("QueueID", typeof(long));
    
            var changesMadeParameter = changesMade != null ?
                new ObjectParameter("ChangesMade", changesMade) :
                new ObjectParameter("ChangesMade", typeof(string));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddHistory", queueIDParameter, changesMadeParameter, changedByParameter);
        }
    
        public virtual int sp_AddOrderToQueue(string environment, Nullable<long> orderID)
        {
            var environmentParameter = environment != null ?
                new ObjectParameter("Environment", environment) :
                new ObjectParameter("Environment", typeof(string));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddOrderToQueue", environmentParameter, orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AllocateStock(string outletID, Nullable<long> orderDetailID)
        {
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AllocateStock", outletIDParameter, orderDetailIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_CheckDeviceUsed(string iMEI, Nullable<long> orderID)
        {
            var iMEIParameter = iMEI != null ?
                new ObjectParameter("IMEI", iMEI) :
                new ObjectParameter("IMEI", typeof(string));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CheckDeviceUsed", iMEIParameter, orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_CheckGersStatusChange(Nullable<long> queueID)
        {
            var queueIDParameter = queueID.HasValue ?
                new ObjectParameter("QueueID", queueID) :
                new ObjectParameter("QueueID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CheckGersStatusChange", queueIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_CheckGUID(Nullable<System.Guid> gUID)
        {
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CheckGUID", gUIDParameter);
        }
    
        public virtual int sp_DeleteTemplate(Nullable<long> templateID)
        {
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteTemplate", templateIDParameter);
        }
    
        public virtual int sp_FixMissingProperty(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FixMissingProperty", gersSkuParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ForcePennyPayment(Nullable<long> orderID, Nullable<int> paymentMethodID, Nullable<decimal> amount)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ForcePennyPayment", orderIDParameter, paymentMethodIDParameter, amountParameter);
        }
    
        public virtual ObjectResult<string> sp_GetAccessoryDevice(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetAccessoryDevice", gersSkuParameter);
        }
    
        public virtual ObjectResult<sp_GetAllOrders_Result> sp_GetAllOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllOrders_Result>("sp_GetAllOrders");
        }
    
        public virtual ObjectResult<sp_GetAPIErrorDetails_Result> sp_GetAPIErrorDetails(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAPIErrorDetails_Result>("sp_GetAPIErrorDetails", orderIDParameter);
        }
    
        public virtual ObjectResult<string> sp_GetAvailableOutlet(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetAvailableOutlet", gersSkuParameter);
        }
    
        public virtual ObjectResult<string> sp_GetAvailableOutlets(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetAvailableOutlets", gersSkuParameter);
        }
    
        public virtual ObjectResult<sp_GetCancelledOrders_Result> sp_GetCancelledOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCancelledOrders_Result>("sp_GetCancelledOrders");
        }
    
        public virtual ObjectResult<sp_GetCarrierData_Result> sp_GetCarrierData(string referenceNumber, string type)
        {
            var referenceNumberParameter = referenceNumber != null ?
                new ObjectParameter("ReferenceNumber", referenceNumber) :
                new ObjectParameter("ReferenceNumber", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCarrierData_Result>("sp_GetCarrierData", referenceNumberParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_GetCarrierResponseRefs_Result> sp_GetCarrierResponseRefs(string lookupData, Nullable<System.DateTime> lookupDate)
        {
            var lookupDataParameter = lookupData != null ?
                new ObjectParameter("LookupData", lookupData) :
                new ObjectParameter("LookupData", typeof(string));
    
            var lookupDateParameter = lookupDate.HasValue ?
                new ObjectParameter("LookupDate", lookupDate) :
                new ObjectParameter("LookupDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCarrierResponseRefs_Result>("sp_GetCarrierResponseRefs", lookupDataParameter, lookupDateParameter);
        }
    
        public virtual ObjectResult<sp_GetDetails_Accessories_Result> sp_GetDetails_Accessories(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDetails_Accessories_Result>("sp_GetDetails_Accessories", gersSkuParameter);
        }
    
        public virtual ObjectResult<sp_GetDetails_Locations_Result> sp_GetDetails_Locations(string gersSku, Nullable<long> orderDetailID)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDetails_Locations_Result>("sp_GetDetails_Locations", gersSkuParameter, orderDetailIDParameter);
        }
    
        public virtual ObjectResult<sp_GetDetails_OrderDetails_Result> sp_GetDetails_OrderDetails(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDetails_OrderDetails_Result>("sp_GetDetails_OrderDetails", orderIDParameter);
        }
    
        public virtual ObjectResult<sp_GetDetails_SKU_Result> sp_GetDetails_SKU(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDetails_SKU_Result>("sp_GetDetails_SKU", gersSkuParameter);
        }
    
        public virtual ObjectResult<sp_GetEmailTemplates_Result> sp_GetEmailTemplates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmailTemplates_Result>("sp_GetEmailTemplates");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetFakeInventoryCount(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetFakeInventoryCount", gersSkuParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetFakeInventoryCountAssigned(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetFakeInventoryCountAssigned", gersSkuParameter);
        }
    
        public virtual ObjectResult<sp_GetIMEIDetails_Result> sp_GetIMEIDetails(string iMEI)
        {
            var iMEIParameter = iMEI != null ?
                new ObjectParameter("IMEI", iMEI) :
                new ObjectParameter("IMEI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetIMEIDetails_Result>("sp_GetIMEIDetails", iMEIParameter);
        }
    
        public virtual ObjectResult<sp_GetItemsNotAllocated_Result> sp_GetItemsNotAllocated(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetItemsNotAllocated_Result>("sp_GetItemsNotAllocated", orderIDParameter);
        }
    
        public virtual ObjectResult<sp_GetItemsWithFakeInventory_Result> sp_GetItemsWithFakeInventory(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetItemsWithFakeInventory_Result>("sp_GetItemsWithFakeInventory", orderIDParameter);
        }
    
        public virtual ObjectResult<sp_GetManualOrders_Result> sp_GetManualOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetManualOrders_Result>("sp_GetManualOrders");
        }
    
        public virtual ObjectResult<sp_GetNotProcessed_Result> sp_GetNotProcessed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetNotProcessed_Result>("sp_GetNotProcessed");
        }
    
        public virtual ObjectResult<sp_GetOrderAccessories_Result> sp_GetOrderAccessories(Nullable<long> orderID, Nullable<int> groupNumber)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var groupNumberParameter = groupNumber.HasValue ?
                new ObjectParameter("GroupNumber", groupNumber) :
                new ObjectParameter("GroupNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrderAccessories_Result>("sp_GetOrderAccessories", orderIDParameter, groupNumberParameter);
        }
    
        public virtual ObjectResult<sp_GetOrderCarrier_Result> sp_GetOrderCarrier(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrderCarrier_Result>("sp_GetOrderCarrier", gersSkuParameter);
        }
    
        public virtual ObjectResult<sp_GetOrderDetailItems_Result> sp_GetOrderDetailItems(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrderDetailItems_Result>("sp_GetOrderDetailItems", orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetOrderDevice(Nullable<long> orderId, string gersSku, Nullable<int> groupNumber)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(long));
    
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var groupNumberParameter = groupNumber.HasValue ?
                new ObjectParameter("GroupNumber", groupNumber) :
                new ObjectParameter("GroupNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetOrderDevice", orderIdParameter, gersSkuParameter, groupNumberParameter);
        }
    
        public virtual ObjectResult<sp_GetOrderPhone_Result> sp_GetOrderPhone(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrderPhone_Result>("sp_GetOrderPhone", orderIDParameter);
        }
    
        public virtual ObjectResult<string> sp_GetOrderSKUs(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetOrderSKUs", orderIDParameter);
        }
    
        public virtual ObjectResult<sp_GetOutletDetails_Result> sp_GetOutletDetails(string outletID)
        {
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOutletDetails_Result>("sp_GetOutletDetails", outletIDParameter);
        }
    
        public virtual ObjectResult<sp_GetPhoneAccessories_Result> sp_GetPhoneAccessories(Nullable<long> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPhoneAccessories_Result>("sp_GetPhoneAccessories", productIDParameter);
        }
    
        public virtual ObjectResult<sp_GetProcessed_Result> sp_GetProcessed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProcessed_Result>("sp_GetProcessed");
        }
    
        public virtual ObjectResult<sp_GetProductDetails_Result> sp_GetProductDetails(string gersSKU)
        {
            var gersSKUParameter = gersSKU != null ?
                new ObjectParameter("GersSKU", gersSKU) :
                new ObjectParameter("GersSKU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProductDetails_Result>("sp_GetProductDetails", gersSKUParameter);
        }
    
        public virtual ObjectResult<sp_GetProductPricing_Result> sp_GetProductPricing(string gersSKU, string priceGroupCode, string orderType)
        {
            var gersSKUParameter = gersSKU != null ?
                new ObjectParameter("GersSKU", gersSKU) :
                new ObjectParameter("GersSKU", typeof(string));
    
            var priceGroupCodeParameter = priceGroupCode != null ?
                new ObjectParameter("PriceGroupCode", priceGroupCode) :
                new ObjectParameter("PriceGroupCode", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProductPricing_Result>("sp_GetProductPricing", gersSKUParameter, priceGroupCodeParameter, orderTypeParameter);
        }
    
        public virtual ObjectResult<string> sp_GetRealAvailableOutlet(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetRealAvailableOutlet", gersSkuParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetRealInventoryCount(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetRealInventoryCount", gersSkuParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetRealInventoryCountAssigned(string gersSku)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetRealInventoryCountAssigned", gersSkuParameter);
        }
    
        public virtual ObjectResult<sp_GetSKUsWithInventory_Result> sp_GetSKUsWithInventory(string orderType, string sKU)
        {
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSKUsWithInventory_Result>("sp_GetSKUsWithInventory", orderTypeParameter, sKUParameter);
        }
    
        public virtual ObjectResult<string> sp_GetSprintCarrierDetails(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetSprintCarrierDetails", orderIDParameter);
        }
    
        public virtual ObjectResult<sp_LookupIMEIOutlet_Result> sp_LookupIMEIOutlet(string iMEI, string outletID)
        {
            var iMEIParameter = iMEI != null ?
                new ObjectParameter("IMEI", iMEI) :
                new ObjectParameter("IMEI", typeof(string));
    
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LookupIMEIOutlet_Result>("sp_LookupIMEIOutlet", iMEIParameter, outletIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MissingorDoublePayment(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MissingorDoublePayment", orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> sp_ProcessData(string operation, string table, Nullable<long> orderDetailID, string orderDetailType, string outletID, Nullable<long> orderID, Nullable<int> groupNumber, Nullable<int> productID, string gersSKU, string productTitle, string sIM, string iMEI)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            var orderDetailTypeParameter = orderDetailType != null ?
                new ObjectParameter("OrderDetailType", orderDetailType) :
                new ObjectParameter("OrderDetailType", typeof(string));
    
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var groupNumberParameter = groupNumber.HasValue ?
                new ObjectParameter("GroupNumber", groupNumber) :
                new ObjectParameter("GroupNumber", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var gersSKUParameter = gersSKU != null ?
                new ObjectParameter("GersSKU", gersSKU) :
                new ObjectParameter("GersSKU", typeof(string));
    
            var productTitleParameter = productTitle != null ?
                new ObjectParameter("ProductTitle", productTitle) :
                new ObjectParameter("ProductTitle", typeof(string));
    
            var sIMParameter = sIM != null ?
                new ObjectParameter("SIM", sIM) :
                new ObjectParameter("SIM", typeof(string));
    
            var iMEIParameter = iMEI != null ?
                new ObjectParameter("IMEI", iMEI) :
                new ObjectParameter("IMEI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("sp_ProcessData", operationParameter, tableParameter, orderDetailIDParameter, orderDetailTypeParameter, outletIDParameter, orderIDParameter, groupNumberParameter, productIDParameter, gersSKUParameter, productTitleParameter, sIMParameter, iMEIParameter);
        }
    
        public virtual int sp_QueueStuckOrders(string environment)
        {
            var environmentParameter = environment != null ?
                new ObjectParameter("Environment", environment) :
                new ObjectParameter("Environment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_QueueStuckOrders", environmentParameter);
        }
    
        public virtual int sp_ReinstateOrder(Nullable<long> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReinstateOrder", orderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ReleaseStock(string outletID)
        {
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ReleaseStock", outletIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_RemoveItemOrderDetail(Nullable<long> orderID, Nullable<int> groupNumber, string gersSku)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var groupNumberParameter = groupNumber.HasValue ?
                new ObjectParameter("GroupNumber", groupNumber) :
                new ObjectParameter("GroupNumber", typeof(int));
    
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_RemoveItemOrderDetail", orderIDParameter, groupNumberParameter, gersSkuParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_RemoveItemOrderDetailItem(Nullable<long> orderDetailID)
        {
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_RemoveItemOrderDetailItem", orderDetailIDParameter);
        }
    
        public virtual int sp_RemoveQueueItem(Nullable<long> queueID, string changesMade, string changedBy)
        {
            var queueIDParameter = queueID.HasValue ?
                new ObjectParameter("QueueID", queueID) :
                new ObjectParameter("QueueID", typeof(long));
    
            var changesMadeParameter = changesMade != null ?
                new ObjectParameter("ChangesMade", changesMade) :
                new ObjectParameter("ChangesMade", typeof(string));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemoveQueueItem", queueIDParameter, changesMadeParameter, changedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_RemoveStock(string outletID)
        {
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_RemoveStock", outletIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_SetOrderPlaced(Nullable<long> orderID, Nullable<int> paymentMethodID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_SetOrderPlaced", orderIDParameter, paymentMethodIDParameter);
        }
    
        public virtual int sp_UpdateActivationStatus(Nullable<long> orderID, Nullable<int> status)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateActivationStatus", orderIDParameter, statusParameter);
        }
    
        public virtual int sp_UpdateGersStatus(Nullable<long> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateGersStatus", orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_UpdateGersStock(Nullable<long> orderID, string outletID, string gersSku, Nullable<long> orderDetailID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_UpdateGersStock", orderIDParameter, outletIDParameter, gersSkuParameter, orderDetailIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_UpdateGersStockWireless(Nullable<long> orderID, string outletID, string gersSku, Nullable<long> orderDetailID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_UpdateGersStockWireless", orderIDParameter, outletIDParameter, gersSkuParameter, orderDetailIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_UpdateGersStockWirelessFake(Nullable<long> orderID, string outletID, string gersSku, Nullable<long> orderDetailID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var outletIDParameter = outletID != null ?
                new ObjectParameter("OutletID", outletID) :
                new ObjectParameter("OutletID", typeof(string));
    
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_UpdateGersStockWirelessFake", orderIDParameter, outletIDParameter, gersSkuParameter, orderDetailIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_UpdateOrderAmount(Nullable<long> orderID, Nullable<decimal> amount, string token)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_UpdateOrderAmount", orderIDParameter, amountParameter, tokenParameter);
        }
    
        public virtual int sp_UpdateOrderPrice(Nullable<long> orderDetailID, Nullable<decimal> netPrice, Nullable<decimal> tax)
        {
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            var netPriceParameter = netPrice.HasValue ?
                new ObjectParameter("NetPrice", netPrice) :
                new ObjectParameter("NetPrice", typeof(decimal));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateOrderPrice", orderDetailIDParameter, netPriceParameter, taxParameter);
        }
    
        public virtual int sp_UpdateOrderQueue(Nullable<long> queueID, Nullable<bool> active, Nullable<bool> automationProcessed, string automationStatus, Nullable<bool> userInterventionRequired, Nullable<int> attempt, Nullable<System.DateTime> modifiedOn, string processing, Nullable<int> orderErrorType, Nullable<System.Guid> accessToken, Nullable<int> gersStatus)
        {
            var queueIDParameter = queueID.HasValue ?
                new ObjectParameter("QueueID", queueID) :
                new ObjectParameter("QueueID", typeof(long));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var automationProcessedParameter = automationProcessed.HasValue ?
                new ObjectParameter("AutomationProcessed", automationProcessed) :
                new ObjectParameter("AutomationProcessed", typeof(bool));
    
            var automationStatusParameter = automationStatus != null ?
                new ObjectParameter("AutomationStatus", automationStatus) :
                new ObjectParameter("AutomationStatus", typeof(string));
    
            var userInterventionRequiredParameter = userInterventionRequired.HasValue ?
                new ObjectParameter("UserInterventionRequired", userInterventionRequired) :
                new ObjectParameter("UserInterventionRequired", typeof(bool));
    
            var attemptParameter = attempt.HasValue ?
                new ObjectParameter("Attempt", attempt) :
                new ObjectParameter("Attempt", typeof(int));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var processingParameter = processing != null ?
                new ObjectParameter("Processing", processing) :
                new ObjectParameter("Processing", typeof(string));
    
            var orderErrorTypeParameter = orderErrorType.HasValue ?
                new ObjectParameter("OrderErrorType", orderErrorType) :
                new ObjectParameter("OrderErrorType", typeof(int));
    
            var accessTokenParameter = accessToken.HasValue ?
                new ObjectParameter("AccessToken", accessToken) :
                new ObjectParameter("AccessToken", typeof(System.Guid));
    
            var gersStatusParameter = gersStatus.HasValue ?
                new ObjectParameter("GersStatus", gersStatus) :
                new ObjectParameter("GersStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateOrderQueue", queueIDParameter, activeParameter, automationProcessedParameter, automationStatusParameter, userInterventionRequiredParameter, attemptParameter, modifiedOnParameter, processingParameter, orderErrorTypeParameter, accessTokenParameter, gersStatusParameter);
        }
    
        public virtual int sp_UpdateOrderSKU(Nullable<long> orderDetailID, Nullable<int> productID, string gersSku, string name)
        {
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("OrderDetailID", orderDetailID) :
                new ObjectParameter("OrderDetailID", typeof(long));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateOrderSKU", orderDetailIDParameter, productIDParameter, gersSkuParameter, nameParameter);
        }
    
        public virtual int sp_UpdateOrderStatus(Nullable<long> orderID, Nullable<int> status)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateOrderStatus", orderIDParameter, statusParameter);
        }
    
        public virtual int sp_UpdatePaymentMethod(Nullable<long> paymentID, Nullable<long> paymentMethodID)
        {
            var paymentIDParameter = paymentID.HasValue ?
                new ObjectParameter("PaymentID", paymentID) :
                new ObjectParameter("PaymentID", typeof(long));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePaymentMethod", paymentIDParameter, paymentMethodIDParameter);
        }
    
        public virtual int sp_UpdateTemplate(Nullable<long> templateID, string title, string subject, string template)
        {
            var templateIDParameter = templateID.HasValue ?
                new ObjectParameter("TemplateID", templateID) :
                new ObjectParameter("TemplateID", typeof(long));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var templateParameter = template != null ?
                new ObjectParameter("Template", template) :
                new ObjectParameter("Template", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateTemplate", templateIDParameter, titleParameter, subjectParameter, templateParameter);
        }
    
        public virtual int DeleteRelease(Nullable<long> releaseID)
        {
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRelease", releaseIDParameter);
        }
    
        public virtual ObjectResult<GetReleaseInstances_Result> GetReleaseInstances()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReleaseInstances_Result>("GetReleaseInstances");
        }
    
        public virtual ObjectResult<GetReleases_Result> GetReleases()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReleases_Result>("GetReleases");
        }
    
        public virtual ObjectResult<GetReleaseStates_Result> GetReleaseStates(Nullable<System.DateTime> lastCheckDate, Nullable<long> releaseID)
        {
            var lastCheckDateParameter = lastCheckDate.HasValue ?
                new ObjectParameter("LastCheckDate", lastCheckDate) :
                new ObjectParameter("LastCheckDate", typeof(System.DateTime));
    
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReleaseStates_Result>("GetReleaseStates", lastCheckDateParameter, releaseIDParameter);
        }
    
        public virtual ObjectResult<GetReleaseUsers_Result> GetReleaseUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReleaseUsers_Result>("GetReleaseUsers");
        }
    
        public virtual int UpdateRelease(Nullable<long> releaseID, string releaseName, Nullable<System.DateTime> releaseDate, string updatedBy, Nullable<bool> completed, Nullable<System.Guid> releaseManager, Nullable<long> currentInstance, Nullable<long> newInstance, string channelName)
        {
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            var releaseNameParameter = releaseName != null ?
                new ObjectParameter("ReleaseName", releaseName) :
                new ObjectParameter("ReleaseName", typeof(string));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var completedParameter = completed.HasValue ?
                new ObjectParameter("Completed", completed) :
                new ObjectParameter("Completed", typeof(bool));
    
            var releaseManagerParameter = releaseManager.HasValue ?
                new ObjectParameter("ReleaseManager", releaseManager) :
                new ObjectParameter("ReleaseManager", typeof(System.Guid));
    
            var currentInstanceParameter = currentInstance.HasValue ?
                new ObjectParameter("CurrentInstance", currentInstance) :
                new ObjectParameter("CurrentInstance", typeof(long));
    
            var newInstanceParameter = newInstance.HasValue ?
                new ObjectParameter("NewInstance", newInstance) :
                new ObjectParameter("NewInstance", typeof(long));
    
            var channelNameParameter = channelName != null ?
                new ObjectParameter("ChannelName", channelName) :
                new ObjectParameter("ChannelName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRelease", releaseIDParameter, releaseNameParameter, releaseDateParameter, updatedByParameter, completedParameter, releaseManagerParameter, currentInstanceParameter, newInstanceParameter, channelNameParameter);
        }
    
        public virtual int UpdateReleaseState(Nullable<long> releaseID, string controlName, Nullable<System.Guid> updatedBy, Nullable<bool> controlState, string value)
        {
            var releaseIDParameter = releaseID.HasValue ?
                new ObjectParameter("ReleaseID", releaseID) :
                new ObjectParameter("ReleaseID", typeof(long));
    
            var controlNameParameter = controlName != null ?
                new ObjectParameter("ControlName", controlName) :
                new ObjectParameter("ControlName", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(System.Guid));
    
            var controlStateParameter = controlState.HasValue ?
                new ObjectParameter("ControlState", controlState) :
                new ObjectParameter("ControlState", typeof(bool));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReleaseState", releaseIDParameter, controlNameParameter, updatedByParameter, controlStateParameter, valueParameter);
        }
    
        public virtual int UpdateReleaseUser(string name, string email, string userGroup, Nullable<System.Guid> userGUID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userGroupParameter = userGroup != null ?
                new ObjectParameter("UserGroup", userGroup) :
                new ObjectParameter("UserGroup", typeof(string));
    
            var userGUIDParameter = userGUID.HasValue ?
                new ObjectParameter("UserGUID", userGUID) :
                new ObjectParameter("UserGUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReleaseUser", nameParameter, emailParameter, userGroupParameter, userGUIDParameter);
        }
    
        public virtual int AddDeviceToOrder(Nullable<int> orderDetailId)
        {
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDeviceToOrder", orderDetailIdParameter);
        }
    
        public virtual int AddItemOrderDetail1(Nullable<int> orderid, string line, string addPart)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("Orderid", orderid) :
                new ObjectParameter("Orderid", typeof(int));
    
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var addPartParameter = addPart != null ?
                new ObjectParameter("AddPart", addPart) :
                new ObjectParameter("AddPart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddItemOrderDetail1", orderidParameter, lineParameter, addPartParameter);
        }
    
        public virtual int AddMissingKits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMissingKits");
        }
    
        public virtual int AddShipmentInfo(Nullable<int> orderId, Nullable<int> shipMethodId, Nullable<int> trackingNumber)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var shipMethodIdParameter = shipMethodId.HasValue ?
                new ObjectParameter("ShipMethodId", shipMethodId) :
                new ObjectParameter("ShipMethodId", typeof(int));
    
            var trackingNumberParameter = trackingNumber.HasValue ?
                new ObjectParameter("TrackingNumber", trackingNumber) :
                new ObjectParameter("TrackingNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddShipmentInfo", orderIdParameter, shipMethodIdParameter, trackingNumberParameter);
        }
    
        public virtual int AddSingleUpsTrackingNumberToOrder(Nullable<int> orderId, string trackingNumber)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var trackingNumberParameter = trackingNumber != null ?
                new ObjectParameter("TrackingNumber", trackingNumber) :
                new ObjectParameter("TrackingNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSingleUpsTrackingNumberToOrder", orderIdParameter, trackingNumberParameter);
        }
    
        public virtual int AllocateStockToOrderDetail(Nullable<int> orderDetailId, string gersSku, Nullable<int> qty)
        {
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(int));
    
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AllocateStockToOrderDetail", orderDetailIdParameter, gersSkuParameter, qtyParameter);
        }
    
        public virtual int AllocateStockToOrderDetailResetoOrderStatus(Nullable<int> orderDetailId, string gersSku, Nullable<int> qty)
        {
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(int));
    
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AllocateStockToOrderDetailResetoOrderStatus", orderDetailIdParameter, gersSkuParameter, qtyParameter);
        }
    
        public virtual int AssignIMEIToWirelessLine(Nullable<int> orderDetailId)
        {
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignIMEIToWirelessLine", orderDetailIdParameter);
        }
    
        public virtual int CancelOrder(Nullable<int> orderId, string comment)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelOrder", orderIdParameter, commentParameter);
        }
    
        public virtual int CreateAccessory(string gersSku, string uPC, string name, string company, string shortDescription, string longDescription, string launchDate, string tag)
        {
            var gersSkuParameter = gersSku != null ?
                new ObjectParameter("GersSku", gersSku) :
                new ObjectParameter("GersSku", typeof(string));
    
            var uPCParameter = uPC != null ?
                new ObjectParameter("UPC", uPC) :
                new ObjectParameter("UPC", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var shortDescriptionParameter = shortDescription != null ?
                new ObjectParameter("ShortDescription", shortDescription) :
                new ObjectParameter("ShortDescription", typeof(string));
    
            var longDescriptionParameter = longDescription != null ?
                new ObjectParameter("LongDescription", longDescription) :
                new ObjectParameter("LongDescription", typeof(string));
    
            var launchDateParameter = launchDate != null ?
                new ObjectParameter("LaunchDate", launchDate) :
                new ObjectParameter("LaunchDate", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateAccessory", gersSkuParameter, uPCParameter, nameParameter, companyParameter, shortDescriptionParameter, longDescriptionParameter, launchDateParameter, tagParameter);
        }
    
        public virtual ObjectResult<GetWirelessAccountById_Result> GetWirelessAccountById(Nullable<int> requestOrderId)
        {
            var requestOrderIdParameter = requestOrderId.HasValue ?
                new ObjectParameter("requestOrderId", requestOrderId) :
                new ObjectParameter("requestOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWirelessAccountById_Result>("GetWirelessAccountById", requestOrderIdParameter);
        }
    
        public virtual ObjectResult<GetWirelessAccountByOrderId_Result> GetWirelessAccountByOrderId(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWirelessAccountByOrderId_Result>("GetWirelessAccountByOrderId", orderIdParameter);
        }
    
        public virtual ObjectResult<GetWirelessAccountByWirelessAccountId_Result> GetWirelessAccountByWirelessAccountId(Nullable<int> wirelessAccountId)
        {
            var wirelessAccountIdParameter = wirelessAccountId.HasValue ?
                new ObjectParameter("WirelessAccountId", wirelessAccountId) :
                new ObjectParameter("WirelessAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWirelessAccountByWirelessAccountId_Result>("GetWirelessAccountByWirelessAccountId", wirelessAccountIdParameter);
        }
    
        public virtual int InsertWirelessAccount(Nullable<int> orderId, Nullable<short> familyPlan, Nullable<System.DateTime> carrierOrderDate, string sSN, Nullable<System.DateTime> dOB, string drvLicNumber, string drvLicState, Nullable<System.DateTime> drvLicExpiry, string firstName, string initial, string lastName, string carrierOrderId, string currentAcctNumber, string currentAcctPIN, Nullable<int> currentTotalLines, string currentPlanType, string creditCode, Nullable<int> maxLinesAllowed, Nullable<bool> depositReq, Nullable<bool> depositAccept, Nullable<int> depositTypeId, string depositId, Nullable<decimal> depositAmount, Nullable<decimal> activationAmount, string prePayId, Nullable<decimal> prePayAmount, string newAccountNo, string newAccountType, Nullable<System.DateTime> billCycleDate, string carrierStatus, Nullable<System.DateTime> carrierStatusDate, Nullable<int> carrierId, Nullable<int> activationStatus, Nullable<System.DateTime> activationDate, Nullable<System.DateTime> carrierTermsTimeStamp, string accountPassword, string accountZipCode, Nullable<int> activatedById, Nullable<int> selectedSecurityQuestionId, string securityQuestionAnswer, ObjectParameter identity)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var familyPlanParameter = familyPlan.HasValue ?
                new ObjectParameter("FamilyPlan", familyPlan) :
                new ObjectParameter("FamilyPlan", typeof(short));
    
            var carrierOrderDateParameter = carrierOrderDate.HasValue ?
                new ObjectParameter("CarrierOrderDate", carrierOrderDate) :
                new ObjectParameter("CarrierOrderDate", typeof(System.DateTime));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var drvLicNumberParameter = drvLicNumber != null ?
                new ObjectParameter("DrvLicNumber", drvLicNumber) :
                new ObjectParameter("DrvLicNumber", typeof(string));
    
            var drvLicStateParameter = drvLicState != null ?
                new ObjectParameter("DrvLicState", drvLicState) :
                new ObjectParameter("DrvLicState", typeof(string));
    
            var drvLicExpiryParameter = drvLicExpiry.HasValue ?
                new ObjectParameter("DrvLicExpiry", drvLicExpiry) :
                new ObjectParameter("DrvLicExpiry", typeof(System.DateTime));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var initialParameter = initial != null ?
                new ObjectParameter("Initial", initial) :
                new ObjectParameter("Initial", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var carrierOrderIdParameter = carrierOrderId != null ?
                new ObjectParameter("CarrierOrderId", carrierOrderId) :
                new ObjectParameter("CarrierOrderId", typeof(string));
    
            var currentAcctNumberParameter = currentAcctNumber != null ?
                new ObjectParameter("CurrentAcctNumber", currentAcctNumber) :
                new ObjectParameter("CurrentAcctNumber", typeof(string));
    
            var currentAcctPINParameter = currentAcctPIN != null ?
                new ObjectParameter("CurrentAcctPIN", currentAcctPIN) :
                new ObjectParameter("CurrentAcctPIN", typeof(string));
    
            var currentTotalLinesParameter = currentTotalLines.HasValue ?
                new ObjectParameter("CurrentTotalLines", currentTotalLines) :
                new ObjectParameter("CurrentTotalLines", typeof(int));
    
            var currentPlanTypeParameter = currentPlanType != null ?
                new ObjectParameter("CurrentPlanType", currentPlanType) :
                new ObjectParameter("CurrentPlanType", typeof(string));
    
            var creditCodeParameter = creditCode != null ?
                new ObjectParameter("CreditCode", creditCode) :
                new ObjectParameter("CreditCode", typeof(string));
    
            var maxLinesAllowedParameter = maxLinesAllowed.HasValue ?
                new ObjectParameter("MaxLinesAllowed", maxLinesAllowed) :
                new ObjectParameter("MaxLinesAllowed", typeof(int));
    
            var depositReqParameter = depositReq.HasValue ?
                new ObjectParameter("DepositReq", depositReq) :
                new ObjectParameter("DepositReq", typeof(bool));
    
            var depositAcceptParameter = depositAccept.HasValue ?
                new ObjectParameter("DepositAccept", depositAccept) :
                new ObjectParameter("DepositAccept", typeof(bool));
    
            var depositTypeIdParameter = depositTypeId.HasValue ?
                new ObjectParameter("DepositTypeId", depositTypeId) :
                new ObjectParameter("DepositTypeId", typeof(int));
    
            var depositIdParameter = depositId != null ?
                new ObjectParameter("DepositId", depositId) :
                new ObjectParameter("DepositId", typeof(string));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            var activationAmountParameter = activationAmount.HasValue ?
                new ObjectParameter("ActivationAmount", activationAmount) :
                new ObjectParameter("ActivationAmount", typeof(decimal));
    
            var prePayIdParameter = prePayId != null ?
                new ObjectParameter("PrePayId", prePayId) :
                new ObjectParameter("PrePayId", typeof(string));
    
            var prePayAmountParameter = prePayAmount.HasValue ?
                new ObjectParameter("PrePayAmount", prePayAmount) :
                new ObjectParameter("PrePayAmount", typeof(decimal));
    
            var newAccountNoParameter = newAccountNo != null ?
                new ObjectParameter("NewAccountNo", newAccountNo) :
                new ObjectParameter("NewAccountNo", typeof(string));
    
            var newAccountTypeParameter = newAccountType != null ?
                new ObjectParameter("NewAccountType", newAccountType) :
                new ObjectParameter("NewAccountType", typeof(string));
    
            var billCycleDateParameter = billCycleDate.HasValue ?
                new ObjectParameter("BillCycleDate", billCycleDate) :
                new ObjectParameter("BillCycleDate", typeof(System.DateTime));
    
            var carrierStatusParameter = carrierStatus != null ?
                new ObjectParameter("CarrierStatus", carrierStatus) :
                new ObjectParameter("CarrierStatus", typeof(string));
    
            var carrierStatusDateParameter = carrierStatusDate.HasValue ?
                new ObjectParameter("CarrierStatusDate", carrierStatusDate) :
                new ObjectParameter("CarrierStatusDate", typeof(System.DateTime));
    
            var carrierIdParameter = carrierId.HasValue ?
                new ObjectParameter("CarrierId", carrierId) :
                new ObjectParameter("CarrierId", typeof(int));
    
            var activationStatusParameter = activationStatus.HasValue ?
                new ObjectParameter("ActivationStatus", activationStatus) :
                new ObjectParameter("ActivationStatus", typeof(int));
    
            var activationDateParameter = activationDate.HasValue ?
                new ObjectParameter("ActivationDate", activationDate) :
                new ObjectParameter("ActivationDate", typeof(System.DateTime));
    
            var carrierTermsTimeStampParameter = carrierTermsTimeStamp.HasValue ?
                new ObjectParameter("CarrierTermsTimeStamp", carrierTermsTimeStamp) :
                new ObjectParameter("CarrierTermsTimeStamp", typeof(System.DateTime));
    
            var accountPasswordParameter = accountPassword != null ?
                new ObjectParameter("AccountPassword", accountPassword) :
                new ObjectParameter("AccountPassword", typeof(string));
    
            var accountZipCodeParameter = accountZipCode != null ?
                new ObjectParameter("AccountZipCode", accountZipCode) :
                new ObjectParameter("AccountZipCode", typeof(string));
    
            var activatedByIdParameter = activatedById.HasValue ?
                new ObjectParameter("ActivatedById", activatedById) :
                new ObjectParameter("ActivatedById", typeof(int));
    
            var selectedSecurityQuestionIdParameter = selectedSecurityQuestionId.HasValue ?
                new ObjectParameter("SelectedSecurityQuestionId", selectedSecurityQuestionId) :
                new ObjectParameter("SelectedSecurityQuestionId", typeof(int));
    
            var securityQuestionAnswerParameter = securityQuestionAnswer != null ?
                new ObjectParameter("SecurityQuestionAnswer", securityQuestionAnswer) :
                new ObjectParameter("SecurityQuestionAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWirelessAccount", orderIdParameter, familyPlanParameter, carrierOrderDateParameter, sSNParameter, dOBParameter, drvLicNumberParameter, drvLicStateParameter, drvLicExpiryParameter, firstNameParameter, initialParameter, lastNameParameter, carrierOrderIdParameter, currentAcctNumberParameter, currentAcctPINParameter, currentTotalLinesParameter, currentPlanTypeParameter, creditCodeParameter, maxLinesAllowedParameter, depositReqParameter, depositAcceptParameter, depositTypeIdParameter, depositIdParameter, depositAmountParameter, activationAmountParameter, prePayIdParameter, prePayAmountParameter, newAccountNoParameter, newAccountTypeParameter, billCycleDateParameter, carrierStatusParameter, carrierStatusDateParameter, carrierIdParameter, activationStatusParameter, activationDateParameter, carrierTermsTimeStampParameter, accountPasswordParameter, accountZipCodeParameter, activatedByIdParameter, selectedSecurityQuestionIdParameter, securityQuestionAnswerParameter, identity);
        }
    
        public virtual int ReleaseStock(string sessionId, Nullable<int> groupNumber, Nullable<int> productId)
        {
            var sessionIdParameter = sessionId != null ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(string));
    
            var groupNumberParameter = groupNumber.HasValue ?
                new ObjectParameter("GroupNumber", groupNumber) :
                new ObjectParameter("GroupNumber", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReleaseStock", sessionIdParameter, groupNumberParameter, productIdParameter);
        }
    
        public virtual int RemoveOrderDetailLine(Nullable<int> orderDetailId)
        {
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveOrderDetailLine", orderDetailIdParameter);
        }
    
        public virtual int ReserveStock(string sessionId, Nullable<int> groupNumber, Nullable<int> orderDetailId, Nullable<int> productId, Nullable<int> qty)
        {
            var sessionIdParameter = sessionId != null ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(string));
    
            var groupNumberParameter = groupNumber.HasValue ?
                new ObjectParameter("GroupNumber", groupNumber) :
                new ObjectParameter("GroupNumber", typeof(int));
    
            var orderDetailIdParameter = orderDetailId.HasValue ?
                new ObjectParameter("OrderDetailId", orderDetailId) :
                new ObjectParameter("OrderDetailId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReserveStock", sessionIdParameter, groupNumberParameter, orderDetailIdParameter, productIdParameter, qtyParameter);
        }
    
        public virtual int UpdateWirelessAccount(Nullable<int> wirelessAccountId, Nullable<int> orderId, Nullable<short> familyPlan, Nullable<System.DateTime> carrierOrderDate, string sSN, Nullable<System.DateTime> dOB, string drvLicNumber, string drvLicState, Nullable<System.DateTime> drvLicExpiry, string firstName, string initial, string lastName, string carrierOrderId, string currentAcctNumber, string currentAcctPIN, Nullable<int> currentTotalLines, string currentPlanType, string creditCode, Nullable<int> maxLinesAllowed, Nullable<bool> depositReq, Nullable<bool> depositAccept, Nullable<int> depositTypeId, string depositId, Nullable<decimal> depositAmount, Nullable<decimal> activationAmount, string prePayId, Nullable<decimal> prePayAmount, string newAccountNo, string newAccountType, Nullable<System.DateTime> billCycleDate, string carrierStatus, Nullable<System.DateTime> carrierStatusDate, Nullable<int> carrierId, Nullable<int> activationStatus, Nullable<System.DateTime> activationDate, Nullable<System.DateTime> carrierTermsTimeStamp, string accountPassword, string accountZipCode, Nullable<int> activatedById, Nullable<int> selectedSecurityQuestionId, string securityQuestionAnswer)
        {
            var wirelessAccountIdParameter = wirelessAccountId.HasValue ?
                new ObjectParameter("WirelessAccountId", wirelessAccountId) :
                new ObjectParameter("WirelessAccountId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var familyPlanParameter = familyPlan.HasValue ?
                new ObjectParameter("FamilyPlan", familyPlan) :
                new ObjectParameter("FamilyPlan", typeof(short));
    
            var carrierOrderDateParameter = carrierOrderDate.HasValue ?
                new ObjectParameter("CarrierOrderDate", carrierOrderDate) :
                new ObjectParameter("CarrierOrderDate", typeof(System.DateTime));
    
            var sSNParameter = sSN != null ?
                new ObjectParameter("SSN", sSN) :
                new ObjectParameter("SSN", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var drvLicNumberParameter = drvLicNumber != null ?
                new ObjectParameter("DrvLicNumber", drvLicNumber) :
                new ObjectParameter("DrvLicNumber", typeof(string));
    
            var drvLicStateParameter = drvLicState != null ?
                new ObjectParameter("DrvLicState", drvLicState) :
                new ObjectParameter("DrvLicState", typeof(string));
    
            var drvLicExpiryParameter = drvLicExpiry.HasValue ?
                new ObjectParameter("DrvLicExpiry", drvLicExpiry) :
                new ObjectParameter("DrvLicExpiry", typeof(System.DateTime));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var initialParameter = initial != null ?
                new ObjectParameter("Initial", initial) :
                new ObjectParameter("Initial", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var carrierOrderIdParameter = carrierOrderId != null ?
                new ObjectParameter("CarrierOrderId", carrierOrderId) :
                new ObjectParameter("CarrierOrderId", typeof(string));
    
            var currentAcctNumberParameter = currentAcctNumber != null ?
                new ObjectParameter("CurrentAcctNumber", currentAcctNumber) :
                new ObjectParameter("CurrentAcctNumber", typeof(string));
    
            var currentAcctPINParameter = currentAcctPIN != null ?
                new ObjectParameter("CurrentAcctPIN", currentAcctPIN) :
                new ObjectParameter("CurrentAcctPIN", typeof(string));
    
            var currentTotalLinesParameter = currentTotalLines.HasValue ?
                new ObjectParameter("CurrentTotalLines", currentTotalLines) :
                new ObjectParameter("CurrentTotalLines", typeof(int));
    
            var currentPlanTypeParameter = currentPlanType != null ?
                new ObjectParameter("CurrentPlanType", currentPlanType) :
                new ObjectParameter("CurrentPlanType", typeof(string));
    
            var creditCodeParameter = creditCode != null ?
                new ObjectParameter("CreditCode", creditCode) :
                new ObjectParameter("CreditCode", typeof(string));
    
            var maxLinesAllowedParameter = maxLinesAllowed.HasValue ?
                new ObjectParameter("MaxLinesAllowed", maxLinesAllowed) :
                new ObjectParameter("MaxLinesAllowed", typeof(int));
    
            var depositReqParameter = depositReq.HasValue ?
                new ObjectParameter("DepositReq", depositReq) :
                new ObjectParameter("DepositReq", typeof(bool));
    
            var depositAcceptParameter = depositAccept.HasValue ?
                new ObjectParameter("DepositAccept", depositAccept) :
                new ObjectParameter("DepositAccept", typeof(bool));
    
            var depositTypeIdParameter = depositTypeId.HasValue ?
                new ObjectParameter("DepositTypeId", depositTypeId) :
                new ObjectParameter("DepositTypeId", typeof(int));
    
            var depositIdParameter = depositId != null ?
                new ObjectParameter("DepositId", depositId) :
                new ObjectParameter("DepositId", typeof(string));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            var activationAmountParameter = activationAmount.HasValue ?
                new ObjectParameter("ActivationAmount", activationAmount) :
                new ObjectParameter("ActivationAmount", typeof(decimal));
    
            var prePayIdParameter = prePayId != null ?
                new ObjectParameter("PrePayId", prePayId) :
                new ObjectParameter("PrePayId", typeof(string));
    
            var prePayAmountParameter = prePayAmount.HasValue ?
                new ObjectParameter("PrePayAmount", prePayAmount) :
                new ObjectParameter("PrePayAmount", typeof(decimal));
    
            var newAccountNoParameter = newAccountNo != null ?
                new ObjectParameter("NewAccountNo", newAccountNo) :
                new ObjectParameter("NewAccountNo", typeof(string));
    
            var newAccountTypeParameter = newAccountType != null ?
                new ObjectParameter("NewAccountType", newAccountType) :
                new ObjectParameter("NewAccountType", typeof(string));
    
            var billCycleDateParameter = billCycleDate.HasValue ?
                new ObjectParameter("BillCycleDate", billCycleDate) :
                new ObjectParameter("BillCycleDate", typeof(System.DateTime));
    
            var carrierStatusParameter = carrierStatus != null ?
                new ObjectParameter("CarrierStatus", carrierStatus) :
                new ObjectParameter("CarrierStatus", typeof(string));
    
            var carrierStatusDateParameter = carrierStatusDate.HasValue ?
                new ObjectParameter("CarrierStatusDate", carrierStatusDate) :
                new ObjectParameter("CarrierStatusDate", typeof(System.DateTime));
    
            var carrierIdParameter = carrierId.HasValue ?
                new ObjectParameter("CarrierId", carrierId) :
                new ObjectParameter("CarrierId", typeof(int));
    
            var activationStatusParameter = activationStatus.HasValue ?
                new ObjectParameter("ActivationStatus", activationStatus) :
                new ObjectParameter("ActivationStatus", typeof(int));
    
            var activationDateParameter = activationDate.HasValue ?
                new ObjectParameter("ActivationDate", activationDate) :
                new ObjectParameter("ActivationDate", typeof(System.DateTime));
    
            var carrierTermsTimeStampParameter = carrierTermsTimeStamp.HasValue ?
                new ObjectParameter("CarrierTermsTimeStamp", carrierTermsTimeStamp) :
                new ObjectParameter("CarrierTermsTimeStamp", typeof(System.DateTime));
    
            var accountPasswordParameter = accountPassword != null ?
                new ObjectParameter("AccountPassword", accountPassword) :
                new ObjectParameter("AccountPassword", typeof(string));
    
            var accountZipCodeParameter = accountZipCode != null ?
                new ObjectParameter("AccountZipCode", accountZipCode) :
                new ObjectParameter("AccountZipCode", typeof(string));
    
            var activatedByIdParameter = activatedById.HasValue ?
                new ObjectParameter("ActivatedById", activatedById) :
                new ObjectParameter("ActivatedById", typeof(int));
    
            var selectedSecurityQuestionIdParameter = selectedSecurityQuestionId.HasValue ?
                new ObjectParameter("SelectedSecurityQuestionId", selectedSecurityQuestionId) :
                new ObjectParameter("SelectedSecurityQuestionId", typeof(int));
    
            var securityQuestionAnswerParameter = securityQuestionAnswer != null ?
                new ObjectParameter("SecurityQuestionAnswer", securityQuestionAnswer) :
                new ObjectParameter("SecurityQuestionAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWirelessAccount", wirelessAccountIdParameter, orderIdParameter, familyPlanParameter, carrierOrderDateParameter, sSNParameter, dOBParameter, drvLicNumberParameter, drvLicStateParameter, drvLicExpiryParameter, firstNameParameter, initialParameter, lastNameParameter, carrierOrderIdParameter, currentAcctNumberParameter, currentAcctPINParameter, currentTotalLinesParameter, currentPlanTypeParameter, creditCodeParameter, maxLinesAllowedParameter, depositReqParameter, depositAcceptParameter, depositTypeIdParameter, depositIdParameter, depositAmountParameter, activationAmountParameter, prePayIdParameter, prePayAmountParameter, newAccountNoParameter, newAccountTypeParameter, billCycleDateParameter, carrierStatusParameter, carrierStatusDateParameter, carrierIdParameter, activationStatusParameter, activationDateParameter, carrierTermsTimeStampParameter, accountPasswordParameter, accountZipCodeParameter, activatedByIdParameter, selectedSecurityQuestionIdParameter, securityQuestionAnswerParameter);
        }
    
        public virtual int Update_CATS_OrderDetails(Nullable<int> orderID, Nullable<int> lineID, string mobileNumber, string accountNo)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var lineIDParameter = lineID.HasValue ?
                new ObjectParameter("LineID", lineID) :
                new ObjectParameter("LineID", typeof(int));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_CATS_OrderDetails", orderIDParameter, lineIDParameter, mobileNumberParameter, accountNoParameter);
        }
    
        public virtual int spAddBannedUsers(Nullable<int> o1, Nullable<int> o2, Nullable<int> o3, Nullable<int> o4, Nullable<int> o5, Nullable<int> o6, Nullable<int> o7, Nullable<int> o8)
        {
            var o1Parameter = o1.HasValue ?
                new ObjectParameter("O1", o1) :
                new ObjectParameter("O1", typeof(int));
    
            var o2Parameter = o2.HasValue ?
                new ObjectParameter("O2", o2) :
                new ObjectParameter("O2", typeof(int));
    
            var o3Parameter = o3.HasValue ?
                new ObjectParameter("O3", o3) :
                new ObjectParameter("O3", typeof(int));
    
            var o4Parameter = o4.HasValue ?
                new ObjectParameter("O4", o4) :
                new ObjectParameter("O4", typeof(int));
    
            var o5Parameter = o5.HasValue ?
                new ObjectParameter("O5", o5) :
                new ObjectParameter("O5", typeof(int));
    
            var o6Parameter = o6.HasValue ?
                new ObjectParameter("O6", o6) :
                new ObjectParameter("O6", typeof(int));
    
            var o7Parameter = o7.HasValue ?
                new ObjectParameter("O7", o7) :
                new ObjectParameter("O7", typeof(int));
    
            var o8Parameter = o8.HasValue ?
                new ObjectParameter("O8", o8) :
                new ObjectParameter("O8", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddBannedUsers", o1Parameter, o2Parameter, o3Parameter, o4Parameter, o5Parameter, o6Parameter, o7Parameter, o8Parameter);
        }
    }
}

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenu1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8H/wH/j//D/9/w==
</value>
  </data>
</root>
<?xml version="1.0"?><DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts" DTS:ExecutableType="SSIS.Package.2">
<DTS:Property DTS:Name="PackageFormatVersion">3</DTS:Property>
<DTS:Property DTS:Name="VersionComments"></DTS:Property>
<DTS:Property DTS:Name="CreatorName">WALLC\116773</DTS:Property>
<DTS:Property DTS:Name="CreatorComputerName">WAHQ-ECOM-EE3A</DTS:Property>
<DTS:Property DTS:Name="CreationDate" DTS:DataType="7">1/4/2013 5:41:50 PM</DTS:Property>
<DTS:Property DTS:Name="PackageType">5</DTS:Property>
<DTS:Property DTS:Name="ProtectionLevel">1</DTS:Property>
<DTS:Property DTS:Name="MaxConcurrentExecutables">-1</DTS:Property>
<DTS:Property DTS:Name="PackagePriorityClass">0</DTS:Property>
<DTS:Property DTS:Name="VersionMajor">1</DTS:Property>
<DTS:Property DTS:Name="VersionMinor">0</DTS:Property>
<DTS:Property DTS:Name="VersionBuild">42</DTS:Property>
<DTS:Property DTS:Name="VersionGUID">{46B11764-0FCA-4D70-9E4F-B6D61A716947}</DTS:Property>
<DTS:Property DTS:Name="EnableConfig">0</DTS:Property>
<DTS:Property DTS:Name="CheckpointFileName"></DTS:Property>
<DTS:Property DTS:Name="SaveCheckpoints">0</DTS:Property>
<DTS:Property DTS:Name="CheckpointUsage">0</DTS:Property>
<DTS:Property DTS:Name="SuppressConfigurationWarnings">0</DTS:Property>
<DTS:ConnectionManager>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">10.7.0.21,1500.CATALOG.WIRELESSADVOCATES.COM1</DTS:Property>
<DTS:Property DTS:Name="DTSID">{35EBFA4D-56E0-4AE7-B150-926D35AFBDE7}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName">ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</DTS:Property><DTS:ObjectData><DTS:ConnectionManager>
<DTS:Property DTS:Name="Retain">0</DTS:Property>
<DTS:Property DTS:Name="ConnectionString">Data Source=10.7.0.221;Initial Catalog=CATALOG.COMPARE;Integrated Security=True;Application Name=SSIS-Package-{35EBFA4D-56E0-4AE7-B150-926D35AFBDE7}10.7.0.21,1500.TEST.WIRELESSADVOCATES.COM1;</DTS:Property></DTS:ConnectionManager></DTS:ObjectData></DTS:ConnectionManager>
<DTS:ConnectionManager>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">AT&amp;T Catalog Load.xlsx</DTS:Property>
<DTS:Property DTS:Name="DTSID">{CF314A2E-A075-4462-9666-3A1C8E1F6CB9}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName">FILE</DTS:Property><DTS:ObjectData><DTS:ConnectionManager>
<DTS:Property DTS:Name="FileUsageType">0</DTS:Property>
<DTS:Property DTS:Name="ConnectionString">C:\Test\CatalogLoad.xlsx</DTS:Property></DTS:ConnectionManager></DTS:ObjectData></DTS:ConnectionManager>
<DTS:ConnectionManager>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">AT&amp;T Catalog Load.xlsx 1</DTS:Property>
<DTS:Property DTS:Name="DTSID">{259A518E-FB44-4FE2-9ED7-A670B0C56D9A}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName">FILE</DTS:Property><DTS:ObjectData><DTS:ConnectionManager>
<DTS:Property DTS:Name="FileUsageType">1</DTS:Property>
<DTS:Property DTS:Name="ConnectionString">C:\Test\CatalogLoad.xlsx</DTS:Property></DTS:ConnectionManager></DTS:ObjectData></DTS:ConnectionManager>
<DTS:ConnectionManager>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">Excel Connection Manager</DTS:Property>
<DTS:Property DTS:Name="DTSID">{4E8E0C3B-2471-4792-BF2C-4B9D2435F58C}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName">EXCEL</DTS:Property><DTS:ObjectData><DTS:ConnectionManager>
<DTS:Property DTS:Name="Retain">0</DTS:Property>
<DTS:Property DTS:Name="ConnectionString">Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Test\CatalogLoad.xlsx;Extended Properties="EXCEL 12.0 XML;HDR=YES";</DTS:Property></DTS:ConnectionManager></DTS:ObjectData></DTS:ConnectionManager>
<DTS:ConnectionManager>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">Template.xlsx</DTS:Property>
<DTS:Property DTS:Name="DTSID">{591D1B59-1323-4E1A-B21C-AF3CDCDDE412}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName">FILE</DTS:Property><DTS:ObjectData><DTS:ConnectionManager>
<DTS:Property DTS:Name="FileUsageType">0</DTS:Property>
<DTS:Property DTS:Name="ConnectionString">C:\Test\Template.xlsx</DTS:Property></DTS:ConnectionManager></DTS:ObjectData></DTS:ConnectionManager>
<DTS:Property DTS:Name="LastModifiedProductVersion">10.50.4000.0</DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">0</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">1033</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Executable DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" DTS:ThreadHint="0">
<DTS:Property DTS:Name="ExecutionLocation">0</DTS:Property>
<DTS:Property DTS:Name="ExecutionAddress"></DTS:Property>
<DTS:Property DTS:Name="TaskContact">Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1</DTS:Property>
<DTS:Property DTS:Name="ForceExecValue">0</DTS:Property>
<DTS:Property DTS:Name="ExecValue" DTS:DataType="3">0</DTS:Property>
<DTS:Property DTS:Name="ForceExecutionResult">-1</DTS:Property>
<DTS:Property DTS:Name="Disabled">0</DTS:Property>
<DTS:Property DTS:Name="FailPackageOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="FailParentOnFailure">0</DTS:Property>
<DTS:Property DTS:Name="MaxErrorCount">1</DTS:Property>
<DTS:Property DTS:Name="ISOLevel">1048576</DTS:Property>
<DTS:Property DTS:Name="LocaleID">-1</DTS:Property>
<DTS:Property DTS:Name="TransactionOption">1</DTS:Property>
<DTS:Property DTS:Name="DelayValidation">0</DTS:Property>
<DTS:LoggingOptions>
<DTS:Property DTS:Name="LoggingMode">0</DTS:Property>
<DTS:Property DTS:Name="FilterKind">1</DTS:Property>
<DTS:Property DTS:Name="EventFilter" DTS:DataType="8"></DTS:Property></DTS:LoggingOptions>
<DTS:Property DTS:Name="ObjectName">Execute SQL Task</DTS:Property>
<DTS:Property DTS:Name="DTSID">{F8517981-8F6B-40F2-9EDD-2DC1057F3BBD}</DTS:Property>
<DTS:Property DTS:Name="Description">Execute SQL Task</DTS:Property>
<DTS:Property DTS:Name="CreationName">Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=10.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property><DTS:ObjectData><SQLTask:SqlTaskData SQLTask:Connection="{35EBFA4D-56E0-4AE7-B150-926D35AFBDE7}" SQLTask:TimeOut="600" SQLTask:IsStoredProc="False" SQLTask:BypassPrepare="True" SQLTask:SqlStmtSourceType="DirectInput" SQLTask:SqlStatementSource="DELETE FROM report.summary&#xA;&#xA;--COUNT DEVICES&#xA;DECLARE @CountLastDevices int&#xA;DECLARE @CountNewDevices int&#xA;DECLARE @CountDeletedDevices int&#xA;DECLARE @CountThisDevices int&#xA;DECLARE @CountUpdatedDevices int&#xA;DECLARE @PushDevices nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastDevices = COUNT(*) FROM cataloglastweek.device&#xA;--New&#xA;SELECT @CountNewDevices = COUNT(*) FROM catalogthisweek.device cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.device cdl WHERE cdt.UPC = cdl.UPC)&#xA;--Deleted&#xA;SELECT @CountDeletedDevices = COUNT(*) FROM cataloglastweek.device cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.device cdt WHERE cdl.UPC = cdt.UPC)&#xA;--ThisWeek&#xA;SELECT @CountThisDevices = COUNT(*) FROM catalogthisweek.device&#xA;--Updated&#xA;SELECT @CountUpdatedDevices = COUNT(*) FROM catalogthisweek.device cdt INNER JOIN cataloglastweek.device cdl ON cdl.UPC = cdt.UPC WHERE (cdt.Name &lt;&gt; cdl.Name) OR (cdt.Manufacturer &lt;&gt; cdl.Manufacturer) OR (cdt.CarrierDeviceId &lt;&gt; cdl.CarrierDeviceId)&#xA;&#xA;&#xA;IF (SELECT SUM(@CountNewDevices + @CountUpdatedDevices)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushDevices = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushDevices = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('01. Devices', @CountLastDevices, @CountNewDevices, @CountDeletedDevices, @CountThisDevices, @CountUpdatedDevices, @PushDevices)&#xA;&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;&#xA;--COUNT RATEPLANS&#xA;DECLARE @CountLastRateplans int&#xA;DECLARE @CountNewRateplans int&#xA;DECLARE @CountDeletedRateplans int&#xA;DECLARE @CountThisRateplans int&#xA;DECLARE @CountUpdatedRateplans int&#xA;DECLARE @PushRateplans nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastRateplans = COUNT(*) FROM cataloglastweek.rateplan&#xA;--New&#xA;SELECT @CountNewRateplans = COUNT(*) FROM catalogthisweek.rateplan cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.rateplan cdl WHERE cdt.CarrierBillCode = cdl.CarrierBillCode)&#xA;--Deleted&#xA;SELECT @CountDeletedRateplans = COUNT(*) FROM cataloglastweek.rateplan cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.rateplan cdt WHERE cdl.CarrierBillCode = cdt.CarrierBillCode)&#xA;--ThisWeek&#xA;SELECT @CountThisRateplans = COUNT(*) FROM catalogthisweek.rateplan&#xA;--Updated&#xA;SELECT @CountUpdatedRateplans = COUNT(*) FROM catalogthisweek.rateplan cdt INNER JOIN cataloglastweek.rateplan cdl ON cdl.CarrierBillCode = cdt.CarrierBillCode WHERE (cdt.Title &lt;&gt; cdl.Title) OR (cdt.Type &lt;&gt; cdl.Type) OR (cdt.ContractTerm &lt;&gt; cdl.ContractTerm) OR (cdt.IncludedLines &lt;&gt; cdl.IncludedLines) OR (cdt.MaxLines &lt;&gt; cdl.MaxLines) OR (cdt.MonthlyFee &lt;&gt; cdl.MonthlyFee) OR (cdt.AdditionalLineFee &lt;&gt; cdl.AdditionalLineFee) OR (cdt.PrimaryActivationFee &lt;&gt; cdl.PrimaryActivationFee) OR (cdt.SecondaryActivationFee &lt;&gt; cdl.SecondaryActivationFee)&#xA;&#xA;IF (SELECT SUM(@CountNewRateplans + @CountUpdatedRateplans)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushRateplans = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushRateplans = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('02. Rateplans', @CountLastRateplans, @CountNewRateplans, @CountDeletedRateplans, @CountThisRateplans, @CountUpdatedRateplans, @PushRateplans)&#xA;&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;&#xA;--COUNT SERVICES&#xA;DECLARE @CountLastServices int&#xA;DECLARE @CountNewServices int&#xA;DECLARE @CountDeletedServices int&#xA;DECLARE @CountThisServices int&#xA;DECLARE @CountUpdatedServices int&#xA;DECLARE @PushServices nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastServices = COUNT(*) FROM cataloglastweek.Service&#xA;--New&#xA;SELECT @CountNewServices = COUNT(*) FROM catalogthisweek.Service cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.service cdl WHERE cdt.CarrierBillCode = cdl.CarrierBillCode)&#xA;--Deleted&#xA;SELECT @CountDeletedServices = COUNT(*) FROM cataloglastweek.Service cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.Service cdt WHERE cdl.CarrierBillCode = cdt.CarrierBillCode)&#xA;--ThisWeek&#xA;SELECT @CountThisServices = COUNT(*) FROM catalogthisweek.Service&#xA;--Updated&#xA;SELECT @CountUpdatedServices = COUNT(*) FROM catalogthisweek.Service cdt INNER JOIN cataloglastweek.Service cdl ON cdl.CarrierBillCode = cdt.CarrierBillCode WHERE (cdt.Title &lt;&gt; cdl.Title) OR (cdt.MonthlyFee &lt;&gt; cdl.MonthlyFee)&#xA;&#xA;IF (SELECT SUM(@CountNewServices+@CountUpdatedServices)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushServices = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushServices = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('03. Services', @CountLastServices, @CountNewServices, @CountDeletedServices, @CountThisServices, @CountUpdatedServices, @PushServices)&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;--COUNT MARKETS&#xA;DECLARE @CountLastMarkets int&#xA;DECLARE @CountNewMarkets int&#xA;DECLARE @CountDeletedMarkets int&#xA;DECLARE @CountThisMarkets int&#xA;DECLARE @CountUpdatedMarkets int&#xA;DECLARE @PushMarkets nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastMarkets = COUNT(*) FROM cataloglastweek.Market&#xA;--New&#xA;SELECT @CountNewMarkets = COUNT(*) FROM catalogthisweek.Market cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.Market cdl WHERE cdt.CarrierMarketCode = cdl.CarrierMarketCode OR cdt.CarrierMarketId = cdl.CarrierMarketId)&#xA;--Deleted&#xA;SELECT @CountDeletedMarkets = COUNT(*) FROM cataloglastweek.Market cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.Market cdt WHERE cdt.CarrierMarketCode = cdl.CarrierMarketCode OR cdt.CarrierMarketId = cdl.CarrierMarketId)&#xA;--ThisWeek&#xA;SELECT @CountThisMarkets = COUNT(*) FROM catalogthisweek.Market&#xA;--Updated&#xA;SELECT @CountUpdatedMarkets = COUNT(*) FROM catalogthisweek.Market cdt INNER JOIN cataloglastweek.Market cdl ON cdl.CarrierMarketCode = cdt.CarrierMarketCode WHERE (cdt.CarrierMarketName &lt;&gt; cdl.CarrierMarketName)&#xA;&#xA;&#xA;IF (SELECT SUM(@CountNewMarkets + @CountDeletedMarkets + @CountUpdatedMarkets)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushMarkets = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushMarkets = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('09. Area Markets', @CountLastMarkets, @CountNewMarkets, @CountDeletedMarkets, @CountThisMarkets, @CountUpdatedMarkets, @PushMarkets)&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;--COUNT ZIP CODE MARKETS&#xA;DECLARE @CountLastZipMarkets int&#xA;DECLARE @CountNewZipMarkets int&#xA;DECLARE @CountDeletedZipMarkets int&#xA;DECLARE @CountThisZipMarkets int&#xA;DECLARE @CountUpdatedZipMarkets int&#xA;DECLARE @PushZipMarkets nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastZipMarkets = COUNT(*) FROM cataloglastweek.ZipCodeMarket&#xA;--New&#xA;SELECT @CountNewZipMarkets = COUNT(*) FROM catalogthisweek.ZipCodeMarket cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.ZipCodeMarket cdl WHERE cdt.Zipcode = cdl.ZipCode)&#xA;--Deleted&#xA;SELECT @CountDeletedZipMarkets = COUNT(*) FROM cataloglastweek.ZipCodeMarket cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.ZipCodeMarket cdt WHERE cdt.Zipcode = cdl.ZipCode)&#xA;--ThisWeek&#xA;SELECT @CountThisZipMarkets = COUNT(*) FROM catalogthisweek.ZipCodeMarket&#xA;--Updated&#xA;SELECT @CountUpdatedZipMarkets = COUNT(*) FROM catalogthisweek.ZipCodeMarket cdt INNER JOIN cataloglastweek.ZipCodeMarket cdl ON cdl.ZipCode = cdt.ZipCode WHERE (cdt.CarrierMarketCode &lt;&gt; cdl.CarrierMarketCode)&#xA;&#xA;&#xA;IF (SELECT SUM(@CountNewZipMarkets + @CountDeletedZipMarkets + @CountUpdatedZipMarkets)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushZipMarkets = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushZipMarkets = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('10. Zip Code Markets', @CountLastZipMarkets, @CountNewZipMarkets, @CountDeletedZipMarkets, @CountThisZipMarkets, @CountUpdatedZipMarkets, @PushZipMarkets)&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;--COUNT PROPERTY DETAILS&#xA;DECLARE @CountLastProperty int&#xA;DECLARE @CountNewProperty int&#xA;DECLARE @CountDeletedProperty int&#xA;DECLARE @CountThisProperty int&#xA;DECLARE @CountUpdatedProperty int&#xA;DECLARE @PushProperty nvarchar(1)&#xA;&#xA;DECLARE @PropertyTagCounttw TABLE  (productcode nvarchar(20), name nvarchar(100), detail nvarchar(max))&#xA;INSERT INTO @PropertyTagCounttw&#xA;SELECT ProductCode, Name, ProductType + Value FROM catalogthisweek.property&#xA;&#xA;DECLARE @PropertyTagCountlw TABLE  (productcode nvarchar(20), name nvarchar(100), detail nvarchar(max))&#xA;INSERT INTO @PropertyTagCountlw&#xA;SELECT ProductCode, Name, ProductType + Value FROM cataloglastweek.property&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastProperty = COUNT(*) FROM cataloglastweek.Property&#xA;--New&#xA;SELECT @CountNewProperty = COUNT(*) FROM @PropertyTagCounttw cdt WHERE NOT EXISTS (SELECT * FROM @PropertyTagCountlw cdl WHERE cdt.ProductCode = cdl.ProductCode AND cdt.name = cdl.name)&#xA;--Deleted&#xA;SELECT @CountDeletedProperty = COUNT(*) FROM @PropertyTagCountlw cdl WHERE NOT EXISTS (SELECT * FROM @PropertyTagCounttw cdt WHERE cdt.ProductCode = cdl.ProductCode AND cdt.name = cdl.name)&#xA;--ThisWeek&#xA;SELECT @CountThisProperty = COUNT(*) FROM catalogthisweek.Property&#xA;--Updated&#xA;SELECT @CountUpdatedProperty = COUNT(*) FROM @PropertyTagCounttw cdt INNER JOIN @PropertyTagCountlw cdl ON cdl.ProductCode = cdt.ProductCode AND cdt.name = cdl.name where CDT.detail &lt;&gt; cdl.detail&#xA;&#xA;&#xA;IF (SELECT SUM(@CountNewProperty + @CountUpdatedProperty)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushProperty = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushProperty = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('04. Product Details', @CountLastProperty, @CountNewProperty, @CountDeletedProperty, @CountThisProperty, @CountUpdatedProperty, @PushProperty)&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;--COUNT DEVICE SERVICE DETAILS&#xA;DECLARE @CountLastDeviceService int&#xA;DECLARE @CountNewDeviceService int&#xA;DECLARE @CountDeletedDeviceService int&#xA;DECLARE @CountThisDeviceService int&#xA;DECLARE @CountUpdatedDeviceService int&#xA;DECLARE @PushDeviceService nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastDeviceService = COUNT(*) FROM cataloglastweek.DeviceService&#xA;--New&#xA;SELECT @CountNewDeviceService = COUNT(*) FROM catalogthisweek.DeviceService cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.DeviceService cdl WHERE cdt.UPC = cdl.UPC AND cdt.CarrierServiceId = cdl.CarrierServiceId)&#xA;--Deleted&#xA;SELECT @CountDeletedDeviceService = COUNT(*) FROM cataloglastweek.DeviceService cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.DeviceService cdt WHERE cdt.UPC = cdl.UPC AND cdt.CarrierServiceId = cdl.CarrierServiceId)&#xA;--ThisWeek&#xA;SELECT @CountThisDeviceService = COUNT(*) FROM catalogthisweek.DeviceService&#xA;--Updated&#xA;SET @CountUpdatedDeviceService = '0'&#xA;&#xA;&#xA;IF (SELECT SUM(@CountNewDevices)) &gt; 0 OR (SELECT SUM(@CountNewServices)) &gt; 0 AND (SELECT SUM(@CountNewDeviceService+@CountDeletedDeviceService)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushDeviceService= 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushDeviceService = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('05. Associations: Device to Service', @CountLastDeviceService, @CountNewDeviceService, @CountDeletedDeviceService, @CountThisDeviceService, @CountUpdatedDeviceService, @PushDeviceService)&#xA;&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;--COUNT RATEPLAN DEVICE DETAILS&#xA;DECLARE @CountLastRateplanDevice int&#xA;DECLARE @CountNewRateplanDevice int&#xA;DECLARE @CountDeletedRateplanDevice int&#xA;DECLARE @CountThisRateplanDevice int&#xA;DECLARE @CountUpdatedRateplanDevice int&#xA;DECLARE @PushRateplanDevice nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastRateplanDevice = COUNT(*) FROM cataloglastweek.RateplanDevice&#xA;--New&#xA;SELECT @CountNewRateplanDevice = COUNT(*) FROM catalogthisweek.RateplanDevice cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.RateplanDevice cdl WHERE cdt.UPC = cdl.UPC AND cdt.RateplanCarrierBillCode = cdl.RateplanCarrierBillCode)&#xA;--Deleted&#xA;SELECT @CountDeletedRateplanDevice = COUNT(*) FROM cataloglastweek.RateplanDevice cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.RateplanDevice cdt WHERE cdt.UPC = cdl.UPC AND cdt.RateplanCarrierBillCode = cdl.RateplanCarrierBillCode)&#xA;--ThisWeek&#xA;SELECT @CountThisRateplanDevice = COUNT(*) FROM catalogthisweek.RateplanDevice&#xA;--Updated&#xA;SET @CountUpdatedRateplanDevice = '0'&#xA;&#xA;&#xA;IF (SELECT SUM(@CountNewDevices)) &gt; 0 OR (SELECT SUM(@CountNewRateplans)) &gt; 0 AND (SELECT SUM(@CountNewRateplanDevice+@CountDeletedRateplanDevice)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushRateplanDevice = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushRateplanDevice = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('06. Associations: Rateplan to Device', @CountLastRateplanDevice, @CountNewRateplanDevice, @CountDeletedRateplanDevice, @CountThisRateplanDevice, @CountUpdatedRateplanDevice, @PushRateplanDevice)&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;--COUNT RATEPLAN SERVICE DETAILS&#xA;DECLARE @CountLastRateplanService int&#xA;DECLARE @CountNewRateplanService int&#xA;DECLARE @CountDeletedRateplanService int&#xA;DECLARE @CountThisRateplanService int&#xA;DECLARE @CountUpdatedRateplanService int&#xA;DECLARE @PushRateplanService nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastRateplanService = COUNT(*) FROM cataloglastweek.RateplanService&#xA;--New&#xA;SELECT @CountNewRateplanService= COUNT(*) FROM catalogthisweek.RateplanService cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.RateplanService cdl WHERE cdt.ServiceCarrierBillCode = cdl.ServiceCarrierBillCode AND cdt.RateplanCarrierBillCode = cdl.RateplanCarrierBillCode)&#xA;--Deleted&#xA;SELECT @CountDeletedRateplanService = COUNT(*) FROM cataloglastweek.RateplanService cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.RateplanService cdt WHERE cdt.ServiceCarrierBillCode = cdl.ServiceCarrierBillCode AND cdt.RateplanCarrierBillCode = cdl.RateplanCarrierBillCode)&#xA;--ThisWeek&#xA;SELECT @CountThisRateplanService = COUNT(*) FROM catalogthisweek.RateplanService&#xA;--Updated&#xA;SET @CountUpdatedRateplanService = '0'&#xA;&#xA;&#xA;IF (SELECT SUM(@CountNewRateplans)) &gt; 0 OR (SELECT SUM(@CountNewServices)) &gt; 0 AND (SELECT SUM(@CountNewRateplanService+@CountDeletedRateplanService)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushRateplanService = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushRateplanService = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('07. Associations: Rateplan to Service', @CountLastRateplanService, @CountNewRateplanService, @CountDeletedRateplanService, @CountThisRateplanService, @CountUpdatedRateplanService, @PushRateplanService)&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;--COUNT RATEPLAN MARKET DETAILS&#xA;DECLARE @CountLastRateplanMarket int&#xA;DECLARE @CountNewRateplanMarket int&#xA;DECLARE @CountDeletedRateplanMarket int&#xA;DECLARE @CountThisRateplanMarket int&#xA;DECLARE @CountUpdatedRateplanMarket int&#xA;DECLARE @PushRateplanMarket nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @CountLastRateplanMarket = COUNT(*) FROM cataloglastweek.RateplanMarket&#xA;--New&#xA;SELECT @CountNewRateplanMarket = COUNT(*) FROM catalogthisweek.RateplanMarket cdt WHERE NOT EXISTS (SELECT * FROM cataloglastweek.RateplanMarket cdl WHERE cdt.CarrierMarketCode = cdl.CarrierMarketCode AND cdt.RateplanCarrierBillCode = cdl.RateplanCarrierBillCode)&#xA;--Deleted&#xA;SELECT @CountDeletedRateplanMarket = COUNT(*) FROM cataloglastweek.RateplanMarket cdl WHERE NOT EXISTS (SELECT * FROM catalogthisweek.RateplanMarket cdt WHERE cdt.CarrierMarketCode = cdl.CarrierMarketCode AND cdt.RateplanCarrierBillCode = cdl.RateplanCarrierBillCode)&#xA;--ThisWeek&#xA;SELECT @CountThisRateplanMarket = COUNT(*) FROM catalogthisweek.RateplanMarket&#xA;--Updated&#xA;SET @CountUpdatedRateplanMarket = '0'&#xA;&#xA;&#xA;IF (SELECT SUM(@CountNewRateplanMarket+@CountDeletedRateplanMarket)) &gt; 0&#xA;        BEGIN&#xA;			SET @PushRateplanMarket = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @PushRateplanMarket = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('08. Associations: Rateplan to Market', @CountLastRateplanMarket, @CountNewRateplanMarket, @CountDeletedRateplanMarket, @CountThisRateplanMarket, @CountUpdatedRateplanMarket, @PushRateplanMarket)&#xA;&#xA;&#xA;/*****************************************************************************************************/&#xA;&#xA;--SUMMARY LINE TOTAL&#xA;DECLARE @TotalLastCount int&#xA;DECLARE @TotalNewCount int&#xA;DECLARE @TotalRemovedCount int&#xA;DECLARE @TotalUpdatedCount int&#xA;DECLARE @TotalThisCount int&#xA;DECLARE @TotalPush nvarchar(1)&#xA;&#xA;--LastWeek&#xA;SELECT @TotalLastCount = SUM(@CountLastDeviceService+@CountLastDevices+@CountLastMarkets+@CountLastProperty+@CountLastRateplanDevice+@CountLastRateplanMarket+@CountLastRateplanService+@CountLastRateplans+@CountLastServices+@CountLastZipMarkets)&#xA;--New&#xA;SELECT @TotalNewCount = SUM(@CountNewDeviceService+@CountNewDevices+@CountNewMarkets+@CountNewProperty+@CountNewRateplanDevice+@CountNewRateplanMarket+@CountNewRateplanService+@CountNewRateplans+@CountNewServices+@CountNewZipMarkets)&#xA;--Deleted&#xA;SELECT @TotalRemovedCount = SUM(@CountDeletedDeviceService+@CountDeletedDevices+@CountDeletedMarkets+@CountDeletedProperty+@CountDeletedRateplanDevice+@CountDeletedRateplanMarket+@CountDeletedRateplanService+@CountDeletedRateplans+@CountDeletedServices+@CountDeletedZipMarkets)&#xA;--ThisWeek&#xA;SELECT @TotalThisCount = SUM(@CountThisDeviceService+@CountThisDevices+@CountThisMarkets+@CountThisProperty+@CountThisRateplanDevice+@CountThisRateplanMarket+@CountThisRateplanService+@CountThisRateplans+@CountThisServices+@CountThisZipMarkets)&#xA;--Updated&#xA;SET @TotalUpdatedCount = SUM(@CountUpdatedDeviceService+@CountUpdatedDevices+@CountUpdatedMarkets+@CountUpdatedProperty+@CountUpdatedRateplanDevice+@CountUpdatedRateplanMarket+@CountUpdatedRateplanService+@CountUpdatedRateplans+@CountUpdatedServices+@CountUpdatedZipMarkets)&#xA;&#xA;IF (SELECT COUNT(*) FROM report.summary WHERE Push = 'Y') &gt; 0&#xA;        BEGIN&#xA;			SET @TotalPush = 'Y'&#xA;		END&#xA;		ELSE&#xA;		BEGIN&#xA;			SET @TotalPush = 'N'&#xA;		END&#xA;&#xA;INSERT INTO [CATALOG.COMPARE].[report].[summary] (Section, LastWeekTotal, New, Removed, ThisWeekTotal, Updates, Push)&#xA;VALUES ('Summary Line', @TotalLastCount, @TotalNewCount, @TotalRemovedCount, @TotalThisCount, @TotalUpdatedCount, @TotalPush)" SQLTask:CodePage="1252" SQLTask:ResultType="ResultSetType_None" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask"/></DTS:ObjectData></DTS:Executable>
<DTS:Property DTS:Name="ObjectName">ATT Package</DTS:Property>
<DTS:Property DTS:Name="DTSID">{4472D5A0-4C6D-4C81-AACC-875C0DB888C2}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName">SSIS.Package.2</DTS:Property>
<DTS:Property DTS:Name="DisableEventHandlers">0</DTS:Property>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;Package xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:DtsControlFlowDiagram&gt;&lt;dwd:BoundingTop&gt;-4415&lt;/dwd:BoundingTop&gt;&lt;dwd:Layout&gt;&lt;dds&gt;
  &lt;diagram fontclsid="{0BE35203-8F91-11CE-9DE3-00AA004BB851}" mouseiconclsid="{0BE35204-8F91-11CE-9DE3-00AA004BB851}" defaultlayout="Microsoft.DataWarehouse.Layout.GraphLayout100" defaultlineroute="Microsoft.DataWarehouse.Layout.GraphLayout100" version="7" nextobject="5" scale="100" pagebreakanchorx="0" pagebreakanchory="0" pagebreaksizex="0" pagebreaksizey="0" scrollleft="0" scrolltop="-5415" gridx="150" gridy="150" marginx="1000" marginy="1000" zoom="100" x="26405" y="9419" backcolor="15334399" defaultpersistence="2" PrintPageNumbersMode="3" PrintMarginTop="0" PrintMarginBottom="635" PrintMarginLeft="0" PrintMarginRight="0" marqueeselectionmode="1" mousepointer="0" snaptogrid="0" autotypeannotation="1" showscrollbars="0" viewpagebreaks="0" donotforceconnectorsbehindshapes="1" backpictureclsid="{00000000-0000-0000-0000-000000000000}"&gt;
    &lt;font&gt;
      &lt;ddsxmlobjectstreamwrapper binary="01010000900180380100065461686f6d61" /&gt;
    &lt;/font&gt;
    &lt;mouseicon&gt;
      &lt;ddsxmlobjectstreamwrapper binary="6c74000000000000" /&gt;
    &lt;/mouseicon&gt;
  &lt;/diagram&gt;
  &lt;layoutmanager&gt;
    &lt;ddsxmlobj /&gt;
  &lt;/layoutmanager&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Execute SQL Task" left="0" top="-4415" logicalid="2" controlid="1" masterid="0" hint1="0" hint2="0" width="2879" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="000800003f0b00008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{F8517981-8F6B-40F2-9EDD-2DC1057F3BBD}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
&lt;/dds&gt;&lt;/dwd:Layout&gt;&lt;dwd:PersistedViewPortTop&gt;-5415&lt;/dwd:PersistedViewPortTop&gt;&lt;/dwd:DtsControlFlowDiagram&gt;&lt;/Package&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">{4472D5A0-4C6D-4C81-AACC-875C0DB888C2}</DTS:Property>
<DTS:Property DTS:Name="DTSID">{437D679B-D65E-4A58-95DC-F2C92778F9C3}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable>
<DTS:PackageVariable>
<DTS:Property DTS:Name="PackageVariableValue" DTS:DataType="8">&lt;Package xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ddl2="http://schemas.microsoft.com/analysisservices/2003/engine/2" xmlns:ddl2_2="http://schemas.microsoft.com/analysisservices/2003/engine/2/2" xmlns:ddl100_100="http://schemas.microsoft.com/analysisservices/2008/engine/100/100" xmlns:ddl200="http://schemas.microsoft.com/analysisservices/2010/engine/200" xmlns:ddl200_200="http://schemas.microsoft.com/analysisservices/2010/engine/200/200" xmlns:dwd="http://schemas.microsoft.com/DataWarehouse/Designer/1.0"&gt;&lt;dwd:DtsControlFlowDiagram&gt;&lt;dwd:BoundingTop&gt;-4415&lt;/dwd:BoundingTop&gt;&lt;dwd:Layout&gt;&lt;dds&gt;
  &lt;diagram fontclsid="{0BE35203-8F91-11CE-9DE3-00AA004BB851}" mouseiconclsid="{0BE35204-8F91-11CE-9DE3-00AA004BB851}" defaultlayout="Microsoft.DataWarehouse.Layout.GraphLayout100" defaultlineroute="Microsoft.DataWarehouse.Layout.GraphLayout100" version="7" nextobject="5" scale="100" pagebreakanchorx="0" pagebreakanchory="0" pagebreaksizex="0" pagebreaksizey="0" scrollleft="0" scrolltop="-5415" gridx="150" gridy="150" marginx="1000" marginy="1000" zoom="100" x="26405" y="9419" backcolor="15334399" defaultpersistence="2" PrintPageNumbersMode="3" PrintMarginTop="0" PrintMarginBottom="635" PrintMarginLeft="0" PrintMarginRight="0" marqueeselectionmode="1" mousepointer="0" snaptogrid="0" autotypeannotation="1" showscrollbars="0" viewpagebreaks="0" donotforceconnectorsbehindshapes="1" backpictureclsid="{00000000-0000-0000-0000-000000000000}"&gt;
    &lt;font&gt;
      &lt;ddsxmlobjectstreamwrapper binary="01010000900180380100065461686f6d61" /&gt;
    &lt;/font&gt;
    &lt;mouseicon&gt;
      &lt;ddsxmlobjectstreamwrapper binary="6c74000000000000" /&gt;
    &lt;/mouseicon&gt;
  &lt;/diagram&gt;
  &lt;layoutmanager&gt;
    &lt;ddsxmlobj /&gt;
  &lt;/layoutmanager&gt;
  &lt;ddscontrol controlprogid="DdsShapes.DdsObjectManagedBridge.2" tooltip="Execute SQL Task" left="0" top="-4415" logicalid="2" controlid="1" masterid="0" hint1="0" hint2="0" width="2879" height="1164" noresize="0" nomove="0" nodefaultattachpoints="0" autodrag="1" usedefaultiddshape="1" selectable="1" showselectionhandles="1" allownudging="1" isannotation="0" dontautolayout="0" groupcollapsed="0" tabstop="1" visible="1" snaptogrid="0"&gt;
    &lt;control&gt;
      &lt;ddsxmlobjectstreaminitwrapper binary="000800003f0b00008c040000" /&gt;
    &lt;/control&gt;
    &lt;layoutobject&gt;
      &lt;ddsxmlobj&gt;
        &lt;property name="LogicalObject" value="{F8517981-8F6B-40F2-9EDD-2DC1057F3BBD}" vartype="8" /&gt;
        &lt;property name="ShowConnectorSource" value="0" vartype="2" /&gt;
      &lt;/ddsxmlobj&gt;
    &lt;/layoutobject&gt;
    &lt;shape groupshapeid="0" groupnode="0" /&gt;
  &lt;/ddscontrol&gt;
&lt;/dds&gt;&lt;/dwd:Layout&gt;&lt;dwd:PersistedViewPortTop&gt;-5415&lt;/dwd:PersistedViewPortTop&gt;&lt;/dwd:DtsControlFlowDiagram&gt;&lt;/Package&gt;</DTS:Property>
<DTS:Property DTS:Name="Namespace">dts-designer-1.0</DTS:Property>
<DTS:Property DTS:Name="ObjectName">package-diagram</DTS:Property>
<DTS:Property DTS:Name="DTSID">{7D02C479-F27D-4785-94A1-D3B9008F75FB}</DTS:Property>
<DTS:Property DTS:Name="Description"></DTS:Property>
<DTS:Property DTS:Name="CreationName"></DTS:Property></DTS:PackageVariable></DTS:Executable>